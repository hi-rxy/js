{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\admin\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\admin\\index.vue","mtime":1645656219649},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Pagination","directives","waves","filters","statusFilter","status","enable","disable","data","tableKey","list","total","listLoading","listQuery","page","limit","sort","statusOptions","showReviewer","form","id","username","email","face","role","dialogFormVisible","dialogStatus","textMap","update","create","dialogPvVisible","rules","menu_name","required","message","trigger","downloadLoading","watch","created","methods","getList","fetchList","resetFilter","handleFilter","changeParent","e","sortChange","sortByColumn","order","prop","resetTemp","icons","url","pid","text","handleModifyStatus","row","menuState","type","handleCreate","createData","createMenu","title","duration","handleUpdate","updateData","updateMenu","handleDelete","index","confirmButtonText","cancelButtonText","then","deleteMenu","handleDownload","excel","header","filename","formatJson","filterVal","getSortClass"],"sourceRoot":"src/views/admin","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-row :gutter=\"20\">\n      <el-col :span=\"24\">\n        <el-card class=\"box-card\">\n          <!--  搜索开始  -->\n          <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n            <el-input v-model=\"listQuery.menu_name\" placeholder=\"管理员名称\" style=\"width: 200px;\" class=\"filter-item\" @keyup.enter.native=\"handleFilter\" />\n            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-search\" @click=\"handleFilter\">\n              Search\n            </el-button>\n            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-refresh\" @click=\"resetFilter\">\n              Reset\n            </el-button>\n            <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\" @click=\"handleCreate\">\n              Add\n            </el-button>\n            <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\" icon=\"el-icon-download\" @click=\"handleDownload\">\n              Export\n            </el-button>\n          </div>\n          <!--  搜索结束  -->\n\n          <!--  表格开始  -->\n          <el-table\n            :key=\"tableKey\"\n            v-loading=\"listLoading\"\n            :data=\"list\"\n            border\n            fit\n            highlight-current-row\n            style=\"width: 100%;\"\n            @sort-change=\"sortChange\"\n          >\n            <!--  字段开始    -->\n            <el-table-column label=\"唯一编号\" prop=\"id\" sortable=\"custom\" align=\"center\" width=\"120\" :class-name=\"getSortClass('id')\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.id }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"账号\" align=\"center\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.username }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"邮箱\" align=\"center\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.email }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"头像\" align=\"center\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.face }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"角色\" align=\"center\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.role }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"状态\" align=\"center\" class-name=\"status-col\">\n              <template slot-scope=\"{row}\">\n                <el-tag :type=\"row.status | statusFilter\">\n                  {{ row.status }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"上次登录时间\" align=\"center\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.last_time  | parseTime('{y}-{m}-{d} {h}:{i}')}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"上次登录ip\" align=\"center\">\n              <template slot-scope=\"{row}\">\n                <span>{{ row.last_ip }}</span>\n              </template>\n            </el-table-column>\n            <!--  字段结束   -->\n            <!--  操作开始   -->\n            <el-table-column label=\"操作\" align=\"center\" width=\"260px\" class-name=\"small-padding fixed-width\">\n              <template slot-scope=\"{row,$index}\">\n                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                  Edit\n                </el-button>\n                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"success\" @click=\"handleModifyStatus(row,'enable')\">\n                  Enable\n                </el-button>\n                <el-button v-if=\"row.status!=='disable'\" size=\"mini\" @click=\"handleModifyStatus(row,'disable')\">\n                  Disable\n                </el-button>\n                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n                  Delete\n                </el-button>\n              </template>\n            </el-table-column>\n            <!--  操作结束   -->\n          </el-table>\n          <!--  表格结束  -->\n\n          <!--  分页开始  -->\n          <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\" :limit.sync=\"listQuery.limit\" @pagination=\"getList\" />\n          <!--  分页结束  -->\n        </el-card>\n      </el-col>\n    </el-row>\n    <!-- form 表单 -->\n    <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n      <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"left\" label-width=\"70px\" style=\"width: 400px; margin-left:50px;\">\n        <el-form-item label=\"账号\" prop=\"username\">\n          <el-input v-model=\"form.username\" />\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"form.email\" />\n        </el-form-item>\n        <el-form-item label=\"角色\" prop=\"role\">\n          <el-input v-model=\"form.role\" />\n        </el-form-item>\n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-select v-model=\"form.status\" class=\"filter-item\" placeholder=\"Please select\">\n            <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\" />\n          </el-select>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">\n          Cancel\n        </el-button>\n        <el-button type=\"primary\" @click=\"dialogStatus==='create'?createData():updateData()\">\n          Confirm\n        </el-button>\n      </div>\n    </el-dialog>\n    <!-- form 表单 -->\n  </div>\n</template>\n\n<script>\nimport { fetchList,createAdmin,updateAdmin,deleteAdmin,adminState } from '@/api/admin'\nimport waves from '@/directive/waves' // waves directive\nimport { parseTime } from '@/utils'\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n  name: 'Admin',\n  components: { Pagination },\n  directives: { waves },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        enable: 'success',\n        disable: 'danger',\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: 0,\n      listLoading: true,\n      listQuery: {\n        page: 1,\n        limit: 10,\n        sort: '+id',\n      },\n      statusOptions: ['enable', 'disable'],\n      showReviewer: false,\n      form: {\n        id: 0,\n        username: '',\n        email: '',\n        face: '',\n        role: '',\n        status: 'enable',\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: 'Edit',\n        create: 'Create'\n      },\n      dialogPvVisible: false,\n      rules: {\n        menu_name: [{ required: true, message: '账号 is required', trigger: 'blur' }],\n      },\n      downloadLoading: false,\n    }\n  },\n  watch: {\n\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n    getList() {\n      // 菜单列表\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        this.list   = response.data.items\n        this.total  = response.data.total\n        this.listLoading = false\n      })\n    },\n    resetFilter() {\n      // 重置查询\n      this.listQuery = {\n        page: 1,\n        limit: 10,\n        sort: '+id',\n      }\n      this.getList()\n    },\n    handleFilter() {\n      // 点击查询\n      this.listQuery.page = 1\n      this.getList()\n    },\n    changeParent(e) {\n      // 显示级联菜单名称\n      if (e) {\n        const node = this.$refs.parentTree.getCheckedNodes()[0].data;\n        this.form.text = node.name;\n      }\n    },\n    sortChange(data) {\n      // 设置排序\n      const { prop, order } = data\n      this.sortByColumn(order,prop)\n    },\n    sortByColumn(order,prop) {\n      if (order === 'ascending') {\n        this.listQuery.sort = '+'+prop\n      } else {\n        this.listQuery.sort = '-'+prop\n      }\n      this.handleFilter()\n    },\n    resetTemp() {\n      // 重置表单\n      this.form = {\n        id: undefined,\n        menu_name: '',\n        icons: '',\n        url: '',\n        sort: 1,\n        pid: 0,\n        status: 'enable',\n        text: '',\n      }\n    },\n    handleModifyStatus(row, status) {\n      // 修改状态\n      this.form = Object.assign({}, row) // copy obj\n      menuState(this.form).then((res) => {\n        this.$message({\n          message: '操作成功',\n          type: 'success'\n        })\n        row.status = status\n      })\n    },\n    handleCreate() {\n      // 唤醒添加弹窗\n      this.resetTemp()\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    createData() {\n      // 添加菜单\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          createMenu(this.form).then((res) => {\n            this.form.id = res.data.id\n            this.list.unshift(this.form)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Created Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleUpdate(row) {\n      // 唤醒修改菜单\n      this.form = Object.assign({}, row) // copy obj\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    updateData() {\n      // 修改菜单\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const tempData = Object.assign({}, this.form)\n          updateMenu(tempData).then((res) => {\n            const index = this.list.findIndex(v => v.id === this.form.id)\n            this.list.splice(index, 1, this.form)\n            this.dialogFormVisible = false\n            this.$notify({\n              title: 'Success',\n              message: 'Update Successfully',\n              type: 'success',\n              duration: 2000\n            })\n          })\n        }\n      })\n    },\n    handleDelete(row, index) {\n      // 确认删除\n      this.$confirm('此操作将永久删除该菜单, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.form = Object.assign({}, row)\n        deleteMenu(this.form).then((res) => {\n          this.$notify({\n            title: 'Success',\n            message: 'Delete Successfully',\n            type: 'success',\n            duration: 2000\n          })\n          this.list.splice(index, 1)\n        })\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n        const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n        const data = this.formatJson(filterVal)\n        excel.export_json_to_excel({\n          header: tHeader,\n          data,\n          filename: 'table-list'\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal) {\n      return this.list.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    },\n    getSortClass: function(key) {\n      // 排序\n      const sort = this.listQuery.sort\n      return sort === `+${key}` ? 'ascending' : 'descending'\n    }\n  }\n}\n</script>\n"]}]}