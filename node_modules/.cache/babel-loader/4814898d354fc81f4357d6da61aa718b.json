{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\fields.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\fields.vue","mtime":1646321826990},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Pagination","directives","waves","filters","statusFilter","status","enable","disable","data","tableKey","list","paneForm","fields","activeName","listQuery","page","limit","sort","form","id","group_id","title","message","info","type","dialogStatus","listLoading","dialogFormVisible","buttonStatus","statusOptions","configTypeOptions","textMap","create","update","createConfig","updateConfig","rules","required","trigger","watch","created","methods","getList","fetchConfigGroupList","loadingInstance","console","getConfigGroupOne","fetchConfigGroupOne","getFieldList","fetchConfigList","resetFilter","handleFilter","resetTemp","sortChange","sortByColumn","order","prop","getSortClass","handlePaneTabClick","obj","action","handlePaneTabsEdit","targetName","handleCreate","createData","createConfigGroup","duration","updateData","updateConfigGroup","handleDelete","confirmButtonText","cancelButtonText","then","deleteConfigGroup","handleConfigCreate","createConfigData","handleConfigUpdate","row","updateConfigData","handleConfigDelete","index","deleteConfig"],"sourceRoot":"src/views/system","sources":["fields.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <template>\n                        <el-tabs class=\"config-group\" editable v-model=\"activeName\" @tab-click=\"handlePaneTabClick\" @edit=\"handlePaneTabsEdit\">\n                            <el-tab-pane v-for=\"item in list\" :key=\"item.id\" :label=\"item.title\" :name=\"item.name\">\n                                <el-col :span=\"8\">\n                                    <el-card class=\"box-card\">\n                                        <el-form :model=\"paneForm\" label-position=\"right\" label-width=\"90px\">\n                                            <el-form-item label=\"名称(英文)\" prop=\"name\">\n                                                <el-input v-model=\"paneForm.name\"/>\n                                            </el-form-item>\n                                            <el-form-item label=\"名称(中文)\" prop=\"title\">\n                                                <el-input v-model=\"paneForm.title\"/>\n                                            </el-form-item>\n                                            <el-form-item label=\"状态\" prop=\"status\">\n                                                <el-select v-model=\"paneForm.status\" class=\"filter-item\" placeholder=\"Please select\">\n                                                    <el-option v-for=\"value in statusOptions\" :key=\"value\" :label=\"value\" :value=\"value\"/>\n                                                </el-select>\n                                            </el-form-item>\n                                            <el-form-item label=\"排序\" prop=\"sort\">\n                                                <el-input v-model=\"paneForm.sort\"/>\n                                            </el-form-item>\n                                            <el-form-item>\n                                                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"updateData\">保存</el-button>\n                                            </el-form-item>\n                                        </el-form>\n                                    </el-card>\n                                </el-col>\n                                <el-col :span=\"16\">\n                                    <el-card class=\"box-card\">\n                                        <!--  搜索开始  -->\n                                        <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                                            <el-input v-model=\"listQuery.name\" placeholder=\"名称\" style=\"width: 200px;\"\n                                                      class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                                            />\n                                            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                                       icon=\"el-icon-search\" @click=\"handleFilter\"\n                                            >\n                                                搜索\n                                            </el-button>\n                                            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                                       icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                                            >\n                                                清除\n                                            </el-button>\n                                            <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                                       @click=\"handleConfigCreate\"\n                                            >\n                                                增加\n                                            </el-button>\n                                        </div>\n                                        <!--  搜索结束  -->\n\n                                        <!--  表格开始  -->\n                                        <el-table\n                                            :key=\"tableKey\"\n                                            v-loading=\"listLoading\"\n                                            element-loading-text=\"拼命加载中\"\n                                            element-loading-spinner=\"el-icon-loading\"\n                                            element-loading-background=\"rgba(245, 247, 250, 1)\"\n                                            :data=\"fields\"\n                                            border\n                                            fit\n                                            highlight-current-row\n                                            style=\"width: 100%;\"\n                                            @sort-change=\"sortChange\"\n                                        >\n                                            <!--  字段开始    -->\n                                            <el-table-column label=\"英文名称\" prop=\"name\"  align=\"center\">\n                                                <template slot-scope=\"{row}\">\n                                                    <span>{{ row.name }}</span>\n                                                </template>\n                                            </el-table-column>\n                                            <el-table-column label=\"中文名称\" align=\"center\">\n                                                <template slot-scope=\"{row}\">\n                                                    <span>{{ row.title }}</span>\n                                                </template>\n                                            </el-table-column>\n                                            <el-table-column label=\"状态\" align=\"center\" class-name=\"status-col\">\n                                                <template slot-scope=\"{row}\">\n                                                    <el-tag :type=\"row.status | statusFilter\">\n                                                        {{ row.status }}\n                                                    </el-tag>\n                                                </template>\n                                            </el-table-column>\n                                            <el-table-column label=\"排序\" align=\"center\" sortable=\"custom\" prop=\"sort\" :class-name=\"getSortClass('sort')\">\n                                                <template slot-scope=\"{row}\">\n                                                    <span>{{ row.sort }}</span>\n                                                </template>\n                                            </el-table-column>\n                                            <!--  字段结束   -->\n                                            <!--  操作开始   -->\n                                            <el-table-column label=\"操作\" align=\"center\" width=\"150px\" class-name=\"small-padding fixed-width\">\n                                                <template slot-scope=\"{row,$index}\">\n                                                    <el-button type=\"primary\" size=\"mini\" @click=\"handleConfigUpdate(row)\">\n                                                        编辑\n                                                    </el-button>\n                                                    <el-button size=\"mini\" type=\"danger\" @click=\"handleConfigDelete(row,$index)\">\n                                                        删除\n                                                    </el-button>\n                                                </template>\n                                            </el-table-column>\n                                            <!--  操作结束   -->\n                                        </el-table>\n                                        <!--  表格结束  -->\n\n                                        <!--  分页开始  -->\n                                        <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                                    :limit.sync=\"listQuery.limit\" @pagination=\"getFieldList\"\n                                        />\n                                        <!--  分页结束  -->\n                                    </el-card>\n                                </el-col>\n                            </el-tab-pane>\n                        </el-tabs>\n                    </template>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"90px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"名称(英文)\" prop=\"name\">\n                    <el-input v-model=\"form.name\"/>\n                </el-form-item>\n                <el-form-item label=\"名称(中文)\" prop=\"title\">\n                    <el-input v-model=\"form.title\"/>\n                </el-form-item>\n                <el-form-item v-if=\"dialogStatus !== 'create'\" label=\"字段说明\" prop=\"message\">\n                    <el-input v-model=\"form.message\"/>\n                </el-form-item>\n                <el-form-item v-if=\"dialogStatus !== 'create'\" label=\"参数类型\" prop=\"type\">\n                    <el-select v-model=\"form.type\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in configTypeOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item v-if=\"dialogStatus !== 'create'\" label=\"参数说明\" prop=\"info\">\n                    <el-input v-model=\"form.info\"/>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-select v-model=\"form.status\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"排序\" prop=\"sort\">\n                    <el-input v-model=\"form.sort\"/>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():(dialogStatus==='createConfig'?createConfigData():updateConfigData())\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n    </div>\n</template>\n<style scoped>\n.el-tabs__new-tab{margin-right: 10px !important;}\n</style>\n<script>\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination'// secondary package based on el-pagination\nimport { fetchConfigGroupList,fetchConfigGroupOne,createConfigGroup,updateConfigGroup,deleteConfigGroup,fetchConfigList,createConfig,updateConfig,deleteConfig } from '@/api/config'\n\nexport default {\n    name: 'Fields',\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n        statusFilter(status) {\n            const statusMap = {\n                enable: 'success',\n                disable: 'danger'\n            }\n            return statusMap[status]\n        }\n    },\n    data() {\n        return {\n            tableKey : 0,\n            // 分页数据\n            list: null,\n            // 标签表单数据\n            paneForm: null,\n            // 配置祖字段数据\n            fields: null,\n            // 当前活动的标签页\n            activeName: '',\n            // 查询参数\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            },\n            // 表单字段\n            form:{\n                id:0,\n                group_id:0,\n                name:'',\n                title:'',\n                message:'',\n                info:'',\n                sort:1,\n                status:'enable',\n                type:'text',\n            },\n            // 表单操作类型\n            dialogStatus: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 状态值\n            statusOptions: ['enable', 'disable'],\n            // 配置类型值\n            configTypeOptions: ['text', 'radio','textarea','select','file'],\n            // 表单按钮\n            textMap: {\n                create: '添加配置组',\n                update: '编辑配置组',\n                createConfig: '添加配置字段',\n                updateConfig: '编辑配置字段',\n            },\n            // 表单验证规则\n            rules: {\n                name: [{ required: true, message: '名称(英文) is required', trigger: 'blur' }],\n                title: [{ required: true, message: '名称(中文) is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {},\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            let loadingInstance = this.$loading({\n                'text':'加载中',\n                'target':document.querySelector('.config-group'),\n                'fullscreen': false\n            })\n            // 配置组列表\n            fetchConfigGroupList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.paneForm = Object.assign({},this.list[0])\n                this.activeName = this.paneForm.name\n                this.total = response.data.total\n                this.getFieldList()\n                this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                    loadingInstance.close();\n                });\n            }, error => {\n                console.log('查询失败')\n                this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                    loadingInstance.close();\n                });\n            })\n        },\n        getConfigGroupOne (name) {\n            let loadingInstance = this.$loading({\n                'text':'加载中',\n                'target':document.querySelector('.config-group'),\n                'fullscreen': false\n            })\n            // 配置组详情\n            fetchConfigGroupOne({name:name}).then(response => {\n                this.paneForm = response.data\n                this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                    loadingInstance.close();\n                });\n            }, error => {\n                console.log('查询失败')\n            })\n        },\n        getFieldList () {\n            // 配置组字段列表\n            fetchConfigList({ name:this.activeName }).then((res) => {\n                this.fields = res.data.items\n                this.total = res.data.total\n                this.listLoading = false\n            },error => {\n                console.log('查询配置组字段失败')\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            }\n            this.getFieldList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getFieldList()\n        },\n        resetTemp() {\n            // 重置左侧表单\n            this.form = {\n                id:0,\n                group_id:0,\n                type:'text',\n                name:'',\n                title:'',\n                message:'',\n                info:'',\n                sort:1,\n                status:'enable'\n            }\n        },\n        sortChange(data) {\n            // 表格排序事件\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        getSortClass: function(key) {\n            // 设置排序字段\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        },\n        handlePaneTabClick(obj, action) {\n            // 标签页点击事件\n            this.activeName = obj.name\n            this.getFieldList()\n            this.getConfigGroupOne(obj.name)\n        },\n        handlePaneTabsEdit (targetName, action) {\n            // 标签页 按钮事件 添加与删除\n            if (action === 'add') {\n                this.handleCreate()\n            }\n            if (action === 'remove') {\n                this.handleDelete(targetName)\n            }\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createConfigGroup(Object.assign({},this.form)).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        updateData() {\n            // 修改配置组\n            this.buttonStatus = true\n            updateConfigGroup(Object.assign({},this.paneForm)).then((res) => {\n                this.dialogFormVisible = false\n                this.$notify({\n                    title: 'Success',\n                    message: 'Update Successfully',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getList()\n                this.buttonStatus = false\n            },error => {\n                this.dialogFormVisible = false\n                this.buttonStatus = true\n            })\n        },\n        handleDelete(name) {\n            // 确认删除\n            this.$confirm('此操作将删除 \"'+name+'\" 配置组, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                deleteConfigGroup(this.paneForm).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleConfigCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'createConfig'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createConfigData() {\n            // 添加配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createConfig(Object.assign({},this.form,{group_id:this.paneForm.id})).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getFieldList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleConfigUpdate(row) {\n            // 唤醒修改\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'updateConfig'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateConfigData() {\n            // 修改配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    updateConfig(Object.assign({},this.form)).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getFieldList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleConfigDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将删除该字段“'+row.name+'”, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteConfig(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getFieldList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n    }\n}\n</script>\n"]}]}