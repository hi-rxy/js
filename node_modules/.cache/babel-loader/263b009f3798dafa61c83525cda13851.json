{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\admin.vue","mtime":1646219054455},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","ImageCropper","Pagination","PanThumb","directives","waves","filters","statusFilter","status","enable","disable","data","tableKey","total","imagecropperKey","defaultAvatar","listQuery","page","limit","sort","form","id","username","email","face","role","password","rePassword","statusOptions","textMap","update","create","imageUrl","list","roleOptions","dialogStatus","listLoading","dialogFormVisible","isDefaultUpload","buttonStatus","isSuper","imagecropperShow","downloadLoading","rules","required","message","trigger","validator","watch","created","methods","getList","fetchList","resetFilter","handleFilter","getRoleList","roleList","console","sortChange","sortByColumn","order","prop","handleAvatarSuccess","res","file","beforeAvatarUpload","cropSuccess","resData","close","resetTemp","handleModifyStatus","row","adminState","type","handleCreate","createData","createAdmin","title","duration","handleUpdate","updateData","updateAdmin","handleDelete","index","confirmButtonText","cancelButtonText","then","deleteAdmin","handleDownload","excel","header","filename","formatJson","filterVal","getSortClass"],"sourceRoot":"src/views/system","sources":["admin.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.username\" placeholder=\"管理员名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                   @click=\"handleCreate\"\n                        >\n                            增加\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"tableKey\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column label=\"编号\" prop=\"id\" sortable=\"custom\" align=\"center\" width=\"80\"\n                                         :class-name=\"getSortClass('id')\"\n                        >\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.id }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"账号\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.username }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"邮箱\" width=\"180\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.email }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"头像\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <img :src=\"row.face\" width=\"40\"/>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"角色\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.role }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"状态\" align=\"center\" class-name=\"status-col\">\n                            <template slot-scope=\"{row}\">\n                                <el-tag :type=\"row.status | statusFilter\">\n                                    {{ row.status }}\n                                </el-tag>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"创建时间\" width=\"180\" align=\"center\" sortable=\"custom\" prop=\"created_at\" :class-name=\"getSortClass('created_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.created_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"上次登录时间\" width=\"180\" align=\"center\" sortable=\"custom\" prop=\"last_time\" :class-name=\"getSortClass('last_time')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.last_time }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"上次登录ip\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.last_ip }}</span>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"230px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    编辑\n                                </el-button>\n                                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"success\"\n                                           @click=\"handleModifyStatus(row,'enable')\"\n                                >\n                                    开启\n                                </el-button>\n                                <el-button v-if=\"row.status!=='disable'\" size=\"mini\"\n                                           @click=\"handleModifyStatus(row,'disable')\"\n                                >\n                                    禁用\n                                </el-button>\n                                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"danger\"\n                                           @click=\"handleDelete(row,$index)\"\n                                >\n                                    删除\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"70px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"头像\" prop=\"face\">\n                    <el-upload\n                        v-if=\"isDefaultUpload\"\n                        class=\"avatar-uploader\"\n                        action=\"/common/upload?field=face&scope=avatar\"\n                        :show-file-list=\"false\"\n                        :on-success=\"handleAvatarSuccess\"\n                        :before-upload=\"beforeAvatarUpload\"\n                    >\n                        <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"avatar\" style=\"display: block;\" alt=\"\">\n                        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n                    </el-upload>\n                    <div v-else>\n                        <pan-thumb style=\"border-radius: 50%;\" :image=\"imageUrl\"/>\n                        <el-button type=\"primary\" icon=\"el-icon-upload\" @click=\"imagecropperShow=true\">\n                            上传\n                        </el-button>\n                    </div>\n                </el-form-item>\n                <el-form-item label=\"账号\" prop=\"username\">\n                    <el-input v-model=\"form.username\"/>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" prop=\"email\">\n                    <el-input ref=\"email\" v-model=\"form.email\"/>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"password\">\n                    <el-input type=\"password\" v-model=\"form.password\"/>\n                </el-form-item>\n                <el-form-item label=\"确认密码\" prop=\"rePassword\">\n                    <el-input type=\"password\" ref=\"rePassword\" v-model=\"form.rePassword\"/>\n                </el-form-item>\n                <el-form-item v-if=\"!isSuper\" label=\"角色\" prop=\"role\">\n                    <el-select multiple v-model=\"form.role\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in roleOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-select v-model=\"form.status\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():updateData()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n\n        <image-cropper\n            v-show=\"imagecropperShow\"\n            :key=\"imagecropperKey\"\n            :width=\"300\"\n            :height=\"300\"\n            url=\"/common/upload?field=face&scope=avatar\"\n            lang-type=\"en\"\n            @close=\"close\"\n            @crop-upload-success=\"cropSuccess\"\n        />\n    </div>\n</template>\n<style>\n.avatar {\n    width: 100px;\n    height: 100px;\n}\n.avatar-uploader .el-upload {\n    border: 1px dashed #d9d9d9;\n    border-radius: 6px;\n    cursor: pointer;\n    position: relative;\n    overflow: hidden;\n}\n.avatar-uploader .el-upload:hover {\n    border-color: #409EFF;\n}\n.avatar-uploader-icon {\n    font-size: 28px;\n    color: #8c939d;\n    width: 178px;\n    height: 178px;\n    line-height: 178px;\n    text-align: center;\n}\n</style>\n<script>\nimport { fetchList, createAdmin, updateAdmin, deleteAdmin, adminState, roleList,fileUpload } from '@/api/admin'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\nimport ImageCropper from '@/components/ImageCropper'\nimport PanThumb from '@/components/PanThumb'\nimport { validEmail } from '@/utils/validate'\n\nexport default {\n    name: 'Admin',\n    components: { ImageCropper, Pagination, PanThumb },\n    directives: { waves },\n    filters: {\n        statusFilter(status) {\n            const statusMap = {\n                enable: 'success',\n                disable: 'danger'\n            }\n            return statusMap[status]\n        }\n    },\n    data() {\n        const defaultAvatar = 'https://wpimg.wallstcn.com/577965b9-bb9e-4e02-9f0c-095b41417191'\n\n        const validateEmail = (rule, value, callback) => {\n            if (value && !validEmail(value)) {\n                return callback(new Error('邮箱格式错误！！！'))\n            } else {\n                return callback()\n            }\n        };\n\n        const validatePassword = (rule, value, callback) => {\n            //console.log(typeof value)\n            if ((typeof value != 'undefined') && value.length < 6) {\n                return callback(new Error('密码不能小于6位！！！'))\n            } else if (value && this.form.password && value !== this.form.password) {\n                return callback(new Error('两次输入的密码不一致！！！'))\n            } else {\n                return callback()\n            }\n        };\n\n        const validateRoles = (rule, value, callback) => {\n            if (value.length <= 0) {\n                return callback(new Error('角色 is required！！！'))\n            } else {\n                return callback()\n            }\n        };\n\n        return {\n            tableKey: 0,\n            total: 0,\n            imagecropperKey: 0,\n            // 默认头像地址\n            defaultAvatar:defaultAvatar,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            },\n            // 表单\n            form: {\n                id: 0,\n                username: '',\n                email: '',\n                face: '',\n                role: [],\n                status: 'enable',\n                password:'',\n                rePassword:''\n            },\n            // 状态值\n            statusOptions: ['enable', 'disable'],\n            // 表单按钮\n            textMap: {\n                update: '编辑',\n                create: '添加'\n            },\n            // 图片地址\n            imageUrl: '',\n            // 分页数据\n            list: null,\n            // 角色列表\n            roleOptions:null,\n            // 表单操作类型\n            dialogStatus: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 上传组件状态\n            isDefaultUpload:true,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 是否超管状态\n            isSuper:false,\n            // 裁剪状态\n            imagecropperShow: false,\n            // 下载状态\n            downloadLoading: false,\n            // 表单验证规则\n            rules: {\n                username: [{ required: true, message: '账号 is required', trigger: 'blur' }],\n                role: [{ required: true, trigger: 'change',validator: validateRoles }],\n                email: [{ required: true,trigger: 'blur' ,validator: validateEmail }],\n                rePassword: [{ trigger: 'blur' ,validator: validatePassword }]\n            }\n        }\n    },\n    watch: {\n\n    },\n    created() {\n        this.getList()\n        this.getRoleList()\n    },\n    methods: {\n        getList() {\n            // 管理员列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        getRoleList() {\n            // 获取角色列表\n            roleList().then(response => {\n                this.roleOptions = response.data\n            },error => {\n                console.log('获取角色集合失败')\n            })\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        handleAvatarSuccess(res, file) {\n            //this.imageUrl = URL.createObjectURL(file.raw)\n            if (res.code == 500) {\n                this.$message.error(res.message);\n            } else {\n                this.imageUrl = res.data.src\n                this.form.face = res.data.src\n            }\n        },\n        beforeAvatarUpload(file) {\n            console.log(file)\n        },\n        cropSuccess(resData) {\n            // 上传头像\n            this.imagecropperShow = false\n            this.imagecropperKey = this.imagecropperKey + 1\n            this.imageUrl = resData.src\n            this.form.face = resData.src\n        },\n        close() {\n            this.imagecropperShow = false\n        },\n        resetTemp() {\n            // 重置表单\n            this.form = {\n                id: 0,\n                username: '',\n                email: '',\n                face: '',\n                role: [],\n                status: 'enable',\n                password:'',\n                rePassword:''\n            }\n        },\n        handleModifyStatus(row, status) {\n            // 修改状态\n            this.form = Object.assign({}, row, { status: status }) // copy obj\n            adminState(this.form).then((res) => {\n                this.$message({\n                    message: '操作成功',\n                    type: 'success'\n                })\n                row.status = status\n            },error => {\n                console.log('修改状态失败')\n            })\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.imageUrl = this.defaultAvatar\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加管理员\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createAdmin(this.form).then((res) => {\n                        // this.form.id = res.data.id\n                        // this.list.unshift(this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleUpdate(row) {\n            // 唤醒修改管理员\n            this.form = Object.assign({}, row) // copy obj\n            this.form.role = row.role.split(',')\n            this.imageUrl = row.face || this.defaultAvatar\n            this.isSuper = row.isSuper\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            // 修改管理员\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    const tempData = Object.assign({}, this.form)\n                    this.buttonStatus = true\n                    updateAdmin(tempData).then((res) => {\n                        // const index = this.list.findIndex(v => v.id === this.form.id)\n                        // this.list.splice(index, 1, this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Update Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList();\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将永久删除该管理员, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteAdmin(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    // this.list.splice(index, 1)\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n                const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n                const data = this.formatJson(filterVal)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal) {\n            return this.list.map(v => filterVal.map(j => {\n                return v[j]\n            }))\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}