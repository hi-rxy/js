{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\role.vue","mtime":1646556201838},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Pagination","directives","waves","data","tableKey","total","listQuery","page","limit","sort","form","description","textMap","update","create","permission","list","trees","oldPermissions","newPermissions","dialogStatus","filterText","listLoading","treeListLoading","dialogFormVisible","dialogPermissionsVisible","downloadLoading","buttonStatus","rules","required","message","trigger","watch","val","created","methods","getList","fetchList","getTreeList","fetchAuthList","resetFilter","handleFilter","sortChange","sortByColumn","order","prop","filterNode","value","resetTemp","handleCreate","createData","createRole","title","type","duration","handleAssignPermissions","row","setPermissions","nodes","saveRolePermission","handleUpdate","updateData","updateRole","handleDelete","index","confirmButtonText","cancelButtonText","then","deleteRole","console","handleDownload","excel","header","filename","formatJson","filterVal","getSortClass"],"sourceRoot":"src/views/system","sources":["role.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.name\" placeholder=\"角色名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                   @click=\"handleCreate\"\n                        >\n                            增加\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"tableKey\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        max-height=\"750\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column\n                            type=\"selection\"\n                            width=\"55\">\n                        </el-table-column>\n                        <el-table-column label=\"角色名称\" prop=\"name\"  align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"描述\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.description }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"创建时间\" align=\"center\" sortable=\"custom\" prop=\"created_at\" :class-name=\"getSortClass('created_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.created_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"修改时间\" align=\"center\" sortable=\"custom\" prop=\"updated_at\" :class-name=\"getSortClass('updated_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.updated_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"260px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleAssignPermissions(row)\">\n                                    分配权限\n                                </el-button>\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    编辑\n                                </el-button>\n                                <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n                                    删除\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"80px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"角色名称\" prop=\"name\">\n                    <el-input v-model=\"form.name\"/>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop=\"description\">\n                    <el-input\n                        type=\"textarea\"\n                        :rows=\"2\"\n                        placeholder=\"请输入描述\"\n                        v-model=\"form.description\">\n                    </el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():updateData()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n        <!-- 分配权限 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogPermissionsVisible\">\n            <el-input\n                v-model=\"filterText\"\n                placeholder=\"输入关键字进行过滤\"\n            ></el-input>\n            <el-tree\n                class=\"filter-tree\"\n                v-loading=\"treeListLoading\"\n                element-loading-text=\"拼命加载中\"\n                element-loading-spinner=\"el-icon-loading\"\n                element-loading-background=\"rgba(245, 247, 250, 1)\"\n                :data=\"trees\"\n                :props=\"{\n              label: 'text',\n              children: 'children'\n            }\"\n                node-key=\"url\"\n                highlight-current\n                accordion\n                :filter-node-method=\"filterNode\"\n                ref=\"tree\"\n                show-checkbox\n                :default-checked-keys=\"oldPermissions\"\n            >\n            </el-tree>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogPermissionsVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"setPermissions()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- 分配权限 -->\n    </div>\n</template>\n\n<script>\nimport { fetchList, createRole,updateRole, deleteRole,fetchAuthList,saveRolePermission } from '@/api/role'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n    name: 'Role',\n    components: { Pagination },\n    directives: { waves },\n    data() {\n        return {\n            tableKey: 0,\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-created_at'\n            },\n            // 表单\n            form: {\n                name: '',\n                description: '',\n            },\n            // 表单按钮\n            textMap: {\n                update: '编辑',\n                create: '添加',\n                permission: '权限',\n            },\n            // 分页数据\n            list: null,\n            // 权限数据\n            trees: [],\n            // 已选择权限数据\n            oldPermissions: [],\n            // 等待设置的权限数据\n            newPermissions: [],\n            // 表单操作类型\n            dialogStatus: '',\n            // 左侧菜单关键字筛选\n            filterText: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 左侧树加载状态\n            treeListLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 默认权限弹窗-隐藏\n            dialogPermissionsVisible: false,\n            // 下载状态\n            downloadLoading: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 表单验证规则\n            rules: {\n                name: [{ required: true, message: '角色名称 is required', trigger: 'blur' }],\n                description: [{ required: true, message: '描述 is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {\n        filterText(val) {\n            this.$refs['tree'].filter(val)\n        }\n    },\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            // 角色列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        getTreeList(name) {\n            // 权限树形列表\n            this.treeListLoading = true\n            fetchAuthList({name:name}).then(response => {\n                this.trees = response.data.menus\n                this.oldPermissions = response.data.routers\n                this.treeListLoading = false\n            },error => {\n                this.dialogPermissionsVisible = false\n                this.treeListLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-created_at'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        filterNode(value, data) {\n            if (!value) return true\n            return data.label.indexOf(value) !== -1\n        },\n        resetTemp() {\n            // 重置表单\n            this.form = {\n                name: '',\n                description: '',\n            }\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加角色\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    this.form.newName = this.form.name\n                    createRole(this.form).then((res) => {\n                        //this.list.unshift(this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleAssignPermissions (row) {\n            // 唤醒权限设置\n            //this.$router.push({ path: '/system/permission', query: { name:row.name }})\n            this.newPermissions = Object.assign({}, { name:row.name }) // copy obj\n            this.dialogPermissionsVisible = true\n            this.buttonStatus = false\n            this.dialogStatus = 'permission'\n            this.getTreeList(row.name)\n        },\n        setPermissions () {\n            let nodes = this.$refs.tree.getCheckedNodes()\n            this.newPermissions = Object.assign({}, {nodes:nodes},this.newPermissions) // copy obj\n            this.buttonStatus = true\n            saveRolePermission(this.newPermissions).then((res) => {\n                this.$notify({\n                    title: 'Success',\n                    message: 'Delete Successfully',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.buttonStatus = false\n                this.dialogPermissionsVisible = false\n            },error => {\n                this.buttonStatus = false\n            })\n        },\n        handleUpdate(row) {\n            // 唤醒修改角色\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            // 修改角色\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    this.form.newName = this.form.name\n                    const tempData = Object.assign({}, this.form)\n                    updateRole(tempData).then((res) => {\n                        // const index = this.list.findIndex(v => v.name === this.form.name)\n                        // this.list.splice(index, 1, this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Update Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将永久删除该角色, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteRole(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    // this.list.splice(index, 1)\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n                const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n                const data = this.formatJson(filterVal)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal) {\n            return this.list.map(v => filterVal.map(j => {\n                return v[j]\n            }))\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}