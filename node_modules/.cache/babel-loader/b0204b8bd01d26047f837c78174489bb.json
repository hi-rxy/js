{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\configs.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\configs.vue","mtime":1646434483759},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB3YXZlcyBmcm9tICdAL2RpcmVjdGl2ZS93YXZlcyc7IC8vIHdhdmVzIGRpcmVjdGl2ZQoKaW1wb3J0IFBhZ2luYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb24nOyAvLyBzZWNvbmRhcnkgcGFja2FnZSBiYXNlZCBvbiBlbC1wYWdpbmF0aW9uCgppbXBvcnQgeyBmZXRjaENvbmZpZ0dyb3VwTGlzdCwgdXBkYXRlQ29uZmlnLCBmZXRjaENvbmZpZ0dyb3VwRmllbGRzIH0gZnJvbSAnQC9hcGkvY29uZmlnJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDb25maWdzJywKICBjb21wb25lbnRzOiB7CiAgICBQYWdpbmF0aW9uOiBQYWdpbmF0aW9uCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICB3YXZlczogd2F2ZXMKICB9LAogIGZpbHRlcnM6IHsKICAgIHN0YXR1c0ZpbHRlcjogZnVuY3Rpb24gc3RhdHVzRmlsdGVyKHN0YXR1cykgewogICAgICB2YXIgc3RhdHVzTWFwID0gewogICAgICAgIGVuYWJsZTogJ3N1Y2Nlc3MnLAogICAgICAgIGRpc2FibGU6ICdkYW5nZXInCiAgICAgIH07CiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXTsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvLyDphY3nva7nu4Tpm4blkIgKICAgICAgY29uZmlnR3JvdXBMaXN0OiBudWxsLAogICAgICAvLyDlvZPliY3pgInkuK3nmoTphY3nva7nu4TlrZfmrrXpm4blkIjmlbDmja4KICAgICAgY29uZmlnR3JvdXBGaWVsZHM6IG51bGwsCiAgICAgIC8vIOW9k+WJjemAieS4reeahOmFjee9rue7hOihqOWNleWtl+autQogICAgICBmb3JtOiBudWxsLAogICAgICAvLyDlvZPliY3mtLvliqjnmoTmoIfnrb7pobUKICAgICAgYWN0aXZlTmFtZTogJycsCiAgICAgIC8vIOihqOWNleaTjeS9nOexu+WeiwogICAgICBkaWFsb2dTdGF0dXM6ICcnLAogICAgICAvLyDliIbpobXmlbDmja7liqDovb3nirbmgIEKICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgIC8vIOm7mOiupOihqOWNleW8ueeqly3pmpDol48KICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICAvLyDooajljZXmj5DkuqTmjInpkq7nirbmgIEKICAgICAgYnV0dG9uU3RhdHVzOiBmYWxzZSwKICAgICAgLy8g54q25oCB5YC8CiAgICAgIHN0YXR1c09wdGlvbnM6IFsnZW5hYmxlJywgJ2Rpc2FibGUnXSwKICAgICAgLy8g6KGo5Y2V6aqM6K+B6KeE5YiZCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgbmFtZTogW3sKICAgICAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICAgICAgbWVzc2FnZTogJ+WQjeensCjoi7HmlocpIGlzIHJlcXVpcmVkJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dLAogICAgICAgIHRpdGxlOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn5ZCN56ewKOS4reaWhykgaXMgcmVxdWlyZWQnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfQogICAgfTsKICB9LAogIHdhdGNoOiB7fSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRMaXN0KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMaXN0OiBmdW5jdGlvbiBnZXRMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5saXN0TG9hZGluZyA9IHRydWU7IC8vIOmFjee9rue7hOWIl+ihqAoKICAgICAgZmV0Y2hDb25maWdHcm91cExpc3QodGhpcy5saXN0UXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuY29uZmlnR3JvdXBMaXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtczsKICAgICAgICB2YXIgY29uZmlnR3JvdXBEYXRhID0gT2JqZWN0LmFzc2lnbih7fSwgX3RoaXMuY29uZmlnR3JvdXBMaXN0WzBdKTsKICAgICAgICBfdGhpcy5hY3RpdmVOYW1lID0gY29uZmlnR3JvdXBEYXRhLm5hbWU7CgogICAgICAgIF90aGlzLmdldENvbmZpZ0dyb3VwRGF0YSgpOwoKICAgICAgICBfdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlOwogICAgICAgIGNvbnNvbGUubG9nKCfmn6Xor6LlpLHotKUnKTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Q29uZmlnR3JvdXBEYXRhOiBmdW5jdGlvbiBnZXRDb25maWdHcm91cERhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8g6YWN572u57uE5a2X5q615YiX6KGoCiAgICAgIHZhciBsb2FkaW5nSW5zdGFuY2UgPSB0aGlzLiRsb2FkaW5nKHsKICAgICAgICAndGV4dCc6ICfliqDovb3kuK0nLAogICAgICAgICd0YXJnZXQnOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29uZmlnLWdyb3VwJyksCiAgICAgICAgJ2Z1bGxzY3JlZW4nOiBmYWxzZSwKICAgICAgICAnc3Bpbm5lcic6ICdlbC1pY29uLWxvYWRpbmcnLAogICAgICAgICdiYWNrZ3JvdW5kJzogJ3JnYmEoMjQ1LCAyNDcsIDI1MCwgMSknCiAgICAgIH0pOwogICAgICBmZXRjaENvbmZpZ0dyb3VwRmllbGRzKHsKICAgICAgICBuYW1lOiB0aGlzLmFjdGl2ZU5hbWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMyLmZvcm0gPSByZXMuZGF0YS5mb3JtOwogICAgICAgIF90aGlzMi5jb25maWdHcm91cEZpZWxkcyA9IHJlcy5kYXRhLmZpZWxkczsKCiAgICAgICAgX3RoaXMyLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICAvLyDku6XmnI3liqHnmoTmlrnlvI/osIPnlKjnmoQgTG9hZGluZyDpnIDopoHlvILmraXlhbPpl60KICAgICAgICAgIGxvYWRpbmdJbnN0YW5jZS5jbG9zZSgpOwogICAgICAgIH0pOwogICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICBfdGhpczIuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIC8vIOS7peacjeWKoeeahOaWueW8j+iwg+eUqOeahCBMb2FkaW5nIOmcgOimgeW8guatpeWFs+mXrQogICAgICAgICAgbG9hZGluZ0luc3RhbmNlLmNsb3NlKCk7CiAgICAgICAgfSk7CgogICAgICAgIGNvbnNvbGUubG9nKCfmn6Xor6LphY3nva7nu4TlrZfmrrXlpLHotKUnKTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlUGFuZVRhYkNsaWNrOiBmdW5jdGlvbiBoYW5kbGVQYW5lVGFiQ2xpY2sob2JqLCBhY3Rpb24pIHsKICAgICAgLy8g5qCH562+6aG154K55Ye75LqL5Lu2CiAgICAgIHRoaXMuYWN0aXZlTmFtZSA9IG9iai5uYW1lOwogICAgICB0aGlzLmdldENvbmZpZ0dyb3VwRGF0YSgpOwogICAgfSwKICAgIHJlc2V0VGVtcDogZnVuY3Rpb24gcmVzZXRUZW1wKCkgewogICAgICAvLyDph43nva7lt6bkvqfooajljZUKICAgICAgdGhpcy5mb3JtID0ge307CiAgICB9LAogICAgdXBkYXRlQ29uZmlnRGF0YTogZnVuY3Rpb24gdXBkYXRlQ29uZmlnRGF0YSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICAvLyDkv67mlLnphY3nva7nu4QKICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS52YWxpZGF0ZShmdW5jdGlvbiAodmFsaWQpIHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIF90aGlzMy5idXR0b25TdGF0dXMgPSB0cnVlOwogICAgICAgICAgdXBkYXRlQ29uZmlnKE9iamVjdC5hc3NpZ24oe30sIF90aGlzMy5mb3JtKSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgIF90aGlzMy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlOwoKICAgICAgICAgICAgX3RoaXMzLiRub3RpZnkoewogICAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgICAgICAgbWVzc2FnZTogJ0NyZWF0ZWQgU3VjY2Vzc2Z1bGx5JywKICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBfdGhpczMuZ2V0Q29uZmlnR3JvdXBEYXRhKCk7CgogICAgICAgICAgICBfdGhpczMuYnV0dG9uU3RhdHVzID0gZmFsc2U7CiAgICAgICAgICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgICAgX3RoaXMzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICAgIF90aGlzMy5idXR0b25TdGF0dXMgPSB0cnVlOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,sC,CAAA;;AACA,iD,CAAA;;AACA,SACAA,oBADA,EAEAC,YAFA,EAGAC,sBAHA,QAIA,cAJA;AAMA;AACAC,iBADA;AAEAC;AAAAC;AAAA,GAFA;AAGAC;AAAAC;AAAA,GAHA;AAIAC;AACAC,gBADA,wBACAC,MADA,EACA;AACA;AACAC,yBADA;AAEAC;AAFA;AAIA;AACA;AAPA,GAJA;AAaAC,MAbA,kBAaA;AACA;AACA;AACAC,2BAFA;AAGA;AACAC,6BAJA;AAKA;AACAC,gBANA;AAOA;AACAC,oBARA;AASA;AACAC,sBAVA;AAWA;AACAC,uBAZA;AAaA;AACAC,8BAdA;AAeA;AACAC,yBAhBA;AAiBA;AACAC,0CAlBA;AAmBA;AACAC;AACApB;AAAAqB;AAAAC;AAAAC;AAAA,UADA;AAEAC;AAAAH;AAAAC;AAAAC;AAAA;AAFA;AApBA;AAyBA,GAvCA;AAwCAE,WAxCA;AAyCAC,SAzCA,qBAyCA;AACA;AACA,GA3CA;AA4CAC;AACAC,WADA,qBACA;AAAA;;AACA,8BADA,CAEA;;AACA/B;AACA;AACA;AACA;;AACA;;AACA;AACA,OANA,EAMA;AACA;AACAgC;AACA,OATA;AAUA,KAdA;AAeAC,sBAfA,gCAeA;AAAA;;AACA;AACA;AACA,qBADA;AAEA,yDAFA;AAGA,2BAHA;AAIA,oCAJA;AAKA;AALA;AAOA/B;AAAAC;AAAA;AACA;AACA;;AACA;AAAA;AACA+B;AACA,SAFA;AAGA,OANA,EAMA;AACA;AAAA;AACAA;AACA,SAFA;;AAGAF;AACA,OAXA;AAYA,KApCA;AAqCAG,sBArCA,8BAqCAC,GArCA,EAqCAC,MArCA,EAqCA;AACA;AACA;AACA;AACA,KAzCA;AA0CAC,aA1CA,uBA0CA;AACA;AACA;AACA,KA7CA;AA8CAC,oBA9CA,8BA8CA;AAAA;;AACA;AACA;AACA;AACA;AACAtC;AACA;;AACA;AACA0B,8BADA;AAEAF,6CAFA;AAGAe,6BAHA;AAIAC;AAJA;;AAMA;;AACA;AACA,WAVA,EAUA;AACA;AACA;AACA,WAbA;AAcA;AACA,OAlBA;AAmBA;AAnEA;AA5CA","names":["fetchConfigGroupList","updateConfig","fetchConfigGroupFields","name","components","Pagination","directives","waves","filters","statusFilter","status","enable","disable","data","configGroupList","configGroupFields","form","activeName","dialogStatus","listLoading","dialogFormVisible","buttonStatus","statusOptions","rules","required","message","trigger","title","watch","created","methods","getList","console","getConfigGroupData","loadingInstance","handlePaneTabClick","obj","action","resetTemp","updateConfigData","type","duration"],"sourceRoot":"src/views/system","sources":["configs.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <template>\n                        <el-tabs class=\"config-group\" v-model=\"activeName\" @tab-click=\"handlePaneTabClick\">\n                            <el-tab-pane v-for=\"item in configGroupList\" :key=\"item.id\" :label=\"item.title\"\n                                         :name=\"item.name\"\n                            >\n                                <el-col :span=\"24\">\n                                    <el-card class=\"box-card\">\n                                        <el-form v-loading=\"listLoading\" ref=\"dataForm\" :rules=\"rules\" :model=\"form\"\n                                                 label-position=\"right\" label-width=\"220px\"\n                                                 style=\"width: 600px; \"\n                                        >\n                                            <el-form-item v-for=\"(item,index) in configGroupFields\"\n                                                          :label=\"item.title\" :prop=\"item.name\" :key=\"item.id\"\n                                            >\n                                                <el-input v-model=\"item.value\"/>\n                                            </el-form-item>\n                                        </el-form>\n                                    </el-card>\n                                </el-col>\n                            </el-tab-pane>\n                        </el-tabs>\n                    </template>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n<script>\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination'// secondary package based on el-pagination\nimport {\n    fetchConfigGroupList,\n    updateConfig,\n    fetchConfigGroupFields,\n} from '@/api/config'\n\nexport default {\n    name: 'Configs',\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n        statusFilter(status) {\n            const statusMap = {\n                enable: 'success',\n                disable: 'danger'\n            }\n            return statusMap[status]\n        }\n    },\n    data() {\n        return {\n            // 配置组集合\n            configGroupList: null,\n            // 当前选中的配置组字段集合数据\n            configGroupFields: null,\n            // 当前选中的配置组表单字段\n            form: null,\n            // 当前活动的标签页\n            activeName: '',\n            // 表单操作类型\n            dialogStatus: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 表单提交按钮状态\n            buttonStatus: false,\n            // 状态值\n            statusOptions: ['enable', 'disable'],\n            // 表单验证规则\n            rules: {\n                name: [{ required: true, message: '名称(英文) is required', trigger: 'blur' }],\n                title: [{ required: true, message: '名称(中文) is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {},\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            this.listLoading = true\n            // 配置组列表\n            fetchConfigGroupList(this.listQuery).then(response => {\n                this.configGroupList = response.data.items\n                let configGroupData = Object.assign({}, this.configGroupList[0])\n                this.activeName = configGroupData.name\n                this.getConfigGroupData()\n                this.listLoading = false\n            }, error => {\n                this.listLoading = false\n                console.log('查询失败')\n            })\n        },\n        getConfigGroupData() {\n            // 配置组字段列表\n            let loadingInstance = this.$loading({\n                'text': '加载中',\n                'target': document.querySelector('.config-group'),\n                'fullscreen': false,\n                'spinner': 'el-icon-loading',\n                'background': 'rgba(245, 247, 250, 1)'\n            })\n            fetchConfigGroupFields({ name: this.activeName }).then((res) => {\n                this.form = res.data.form\n                this.configGroupFields = res.data.fields\n                this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                    loadingInstance.close()\n                })\n            }, error => {\n                this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                    loadingInstance.close()\n                })\n                console.log('查询配置组字段失败')\n            })\n        },\n        handlePaneTabClick(obj, action) {\n            // 标签页点击事件\n            this.activeName = obj.name\n            this.getConfigGroupData()\n        },\n        resetTemp() {\n            // 重置左侧表单\n            this.form = {}\n        },\n        updateConfigData() {\n            // 修改配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    updateConfig(Object.assign({}, this.form)).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getConfigGroupData()\n                        this.buttonStatus = false\n                    }, error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        }\n    }\n}\n</script>\n"]}]}