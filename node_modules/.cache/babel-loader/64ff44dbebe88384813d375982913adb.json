{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\permission.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\permission.vue","mtime":1646548695806},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Pagination","directives","waves","data","tableKey","total","listQuery","page","limit","sort","form","description","textMap","update","create","list","trees","dialogStatus","filterText","listLoading","treeListLoading","dialogFormVisible","downloadLoading","buttonStatus","rules","required","message","trigger","watch","val","created","methods","getList","fetchList","getTreeList","fetchTreeList","resetFilter","handleFilter","sortChange","sortByColumn","order","prop","clickTreeNode","e","console","filterNode","value","resetTemp","handleCreate","createData","createAuthority","title","type","duration","handleUpdate","row","updateData","updateAuthority","handleDelete","index","confirmButtonText","cancelButtonText","then","deleteAuthority","handleDownload","excel","header","filename","formatJson","filterVal","getSortClass"],"sourceRoot":"src/views/system","sources":["permission.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"4\">\n                <el-card class=\"box-card\">\n                    <el-input\n                        v-model=\"filterText\"\n                        placeholder=\"输入关键字进行过滤\"\n                    >\n                    </el-input>\n\n                    <el-tree\n                        class=\"filter-tree\"\n                        v-loading=\"treeListLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"trees\"\n                        :props=\"{\n              label: 'menu_name',\n              children: 'children'\n            }\"\n                        node-key=\"id\"\n                        highlight-current\n                        accordion\n                        :filter-node-method=\"filterNode\"\n                        @node-click=\"clickTreeNode\"\n                        ref=\"tree\"\n                    >\n                    </el-tree>\n                </el-card>\n            </el-col>\n            <el-col :span=\"20\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.name\" placeholder=\"权限名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                   @click=\"handleCreate\"\n                        >\n                            增加\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"tableKey\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        max-height=\"600\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column\n                            type=\"selection\"\n                            width=\"55\">\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"路径\" prop=\"name\"  align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"描述\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.description }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"创建时间\" align=\"center\" sortable=\"custom\" prop=\"created_at\" :class-name=\"getSortClass('created_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.created_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"修改时间\" align=\"center\" sortable=\"custom\" prop=\"updated_at\" :class-name=\"getSortClass('updated_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.updated_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"260px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    编辑\n                                </el-button>\n                                <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n                                    删除\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"80px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"权限名称\" prop=\"name\">\n                    <el-input v-model=\"form.name\"/>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop=\"description\">\n                    <el-input\n                        type=\"textarea\"\n                        :rows=\"2\"\n                        placeholder=\"请输入描述\"\n                        v-model=\"form.description\">\n                    </el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():updateData()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n    </div>\n</template>\n\n<script>\nimport { fetchList,createAuthority, updateAuthority, deleteAuthority } from '@/api/authority'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination'\nimport { fetchTreeList } from '@/api/menu' // secondary package based on el-pagination\n\nexport default {\n    name: 'Permission',\n    components: { Pagination },\n    directives: { waves },\n    data() {\n        return {\n            tableKey: 0,\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-created_at'\n            },\n            // 表单\n            form: {\n                name: '',\n                description: '',\n            },\n            // 表单按钮\n            textMap: {\n                update: '编辑',\n                create: '添加'\n            },\n            // 分页数据\n            list: null,\n            // 左侧树数据\n            trees: null,\n            // 表单操作类型\n            dialogStatus: '',\n            // 左侧菜单关键字筛选\n            filterText: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 左侧树加载状态\n            treeListLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 下载状态\n            downloadLoading: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 表单验证规则\n            rules: {\n                name: [{ required: true, message: '权限名称 is required', trigger: 'blur' }],\n                description: [{ required: true, message: '描述 is required', trigger: 'blur' }]\n            },\n        }\n    },\n    watch: {\n        filterText(val) {\n            this.$refs.tree.filter(val)\n        }\n    },\n    created() {\n        this.getList()\n        this.getTreeList()\n    },\n    methods: {\n        getList() {\n            // 权限列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        getTreeList() {\n            // 菜单树形列表\n            this.treeListLoading = true\n            fetchTreeList().then(response => {\n                this.trees = response.data\n                this.treeListLoading = false\n            },error => {\n                this.treeListLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-created_at'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        clickTreeNode(e) {\n            console.log(e)\n            if (e.pid != '0') {\n                // 点击左侧菜单查询\n                this.listQuery.id = e.id\n                this.getList()\n            }\n        },\n        filterNode(value, data) {\n            if (!value) return true\n            return data.text.indexOf(value) !== -1\n        },\n        resetTemp() {\n            // 重置表单\n            this.form = {\n                name: '',\n                description: '',\n            }\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加权限\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    this.form.newName = this.form.name\n                    createAuthority(this.form).then((res) => {\n                        //this.list.unshift(this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleUpdate(row) {\n            // 唤醒修改权限\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            // 修改权限\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    this.form.newName = this.form.name\n                    const tempData = Object.assign({}, this.form)\n                    updateAuthority(tempData).then((res) => {\n                        // const index = this.list.findIndex(v => v.name === this.form.name)\n                        // this.list.splice(index, 1, this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Update Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将永久删除该权限, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteAuthority(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    // this.list.splice(index, 1)\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n                const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n                const data = this.formatJson(filterVal)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal) {\n            return this.list.map(v => filterVal.map(j => {\n                return v[j]\n            }))\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}