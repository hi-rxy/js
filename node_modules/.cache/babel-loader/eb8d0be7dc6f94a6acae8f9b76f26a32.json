{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\menu.vue","mtime":1646220330147},{"path":"D:\\wwwroot\\vue-admin-template\\babel.config.js","mtime":1645316547015},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","components","Pagination","directives","waves","filters","statusFilter","status","enable","disable","data","tableKey","total","listQuery","page","limit","sort","form","id","menu_name","icons","url","pid","text","list","trees","dialogStatus","filterText","statusOptions","textMap","update","create","listLoading","treeListLoading","dialogFormVisible","downloadLoading","buttonStatus","rules","required","message","trigger","watch","val","created","methods","getList","fetchList","getTreeList","fetchTreeList","resetFilter","handleFilter","changeParent","e","clickTreeNode","filterNode","value","sortChange","sortByColumn","order","prop","handleCurrentChange","row","console","resetTemp","handleModifyStatus","menuState","type","handleCreate","createData","createMenu","title","duration","handleUpdate","updateData","updateMenu","handleDelete","index","confirmButtonText","cancelButtonText","then","deleteMenu","handleDownload","excel","header","filename","formatJson","filterVal","getSortClass"],"sourceRoot":"src/views/system","sources":["menu.vue"],"sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"4\">\n                <el-card class=\"box-card\">\n                    <el-input\n                        v-model=\"filterText\"\n                        placeholder=\"输入关键字进行过滤\"\n                    >\n                    </el-input>\n\n                    <el-tree\n                        class=\"filter-tree\"\n                        v-loading=\"treeListLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"trees\"\n                        :props=\"{\n              label: 'text',\n              children: 'children'\n            }\"\n                        node-key=\"id\"\n                        highlight-current\n                        accordion\n                        :filter-node-method=\"filterNode\"\n                        @node-click=\"clickTreeNode\"\n                        ref=\"tree\"\n                    >\n                    </el-tree>\n                </el-card>\n            </el-col>\n            <el-col :span=\"20\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.menu_name\" placeholder=\"菜单名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                   @click=\"handleCreate\"\n                        >\n                            增加\n                        </el-button>\n                        <el-button v-waves :loading=\"downloadLoading\" class=\"filter-item\" type=\"primary\"\n                                   icon=\"el-icon-download\" @click=\"handleDownload\"\n                        >\n                            导出\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"tableKey\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column label=\"编号\" prop=\"id\" sortable=\"custom\" align=\"center\" width=\"80\"\n                                         :class-name=\"getSortClass('id')\"\n                        >\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.id }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"菜单\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.menu_name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"图标\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span style=\"font-size: 8px\">{{ row.icons }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"地址\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span style=\"font-size: 8px\">{{ row.url }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"状态\" align=\"center\" width=\"100\" class-name=\"status-col\">\n                            <template slot-scope=\"{row}\">\n                                <el-tag :type=\"row.status | statusFilter\">\n                                    {{ row.status }}\n                                </el-tag>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"排序\" align=\"center\" width=\"80\" prop=\"sort\" sortable=\"custom\"\n                                         :class-name=\"getSortClass('sort')\"\n                        >\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.sort }}</span>\n                                <!--<el-input v-model=\"form.sort\" @change=\"handleCurrentChange(row)\" />-->\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"240px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    编辑\n                                </el-button>\n                                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"success\"\n                                           @click=\"handleModifyStatus(row,'enable')\"\n                                >\n                                    开启\n                                </el-button>\n                                <el-button v-if=\"row.status!=='disable'\" size=\"mini\"\n                                           @click=\"handleModifyStatus(row,'disable')\"\n                                >\n                                    禁用\n                                </el-button>\n                                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"danger\"\n                                           @click=\"handleDelete(row,$index)\"\n                                >\n                                    删除\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"70px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"上级\" prop=\"pid\">\n                    <el-cascader\n                        :options=\"trees\"\n                        v-model=\"form.pid\"\n                        :props=\"{\n              checkStrictly: true,\n              emitPath: false,\n              label: 'text',\n              value: 'id',\n              children: 'children'\n            }\"\n                        :show-all-levels=\"false\"\n                        placeholder=\"父级菜单\"\n                        collapse-tags\n                        clearable\n                        @change=\"changeParent\"\n                        clearable\n                    ></el-cascader>\n                </el-form-item>\n                <el-form-item label=\"名称\" prop=\"menu_name\">\n                    <el-input v-model=\"form.menu_name\"/>\n                </el-form-item>\n                <el-form-item label=\"图标\" prop=\"icons\">\n                    <el-input v-model=\"form.icons\"/>\n                </el-form-item>\n                <el-form-item label=\"地址\" prop=\"url\">\n                    <el-input v-model=\"form.url\"/>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-select v-model=\"form.status\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"排序\" prop=\"sort\">\n                    <el-input v-model=\"form.sort\"/>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():updateData()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n    </div>\n</template>\n\n<script>\nimport { fetchList, fetchTreeList, createMenu, updateMenu, deleteMenu, menuState } from '@/api/menu'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n    name: 'Menu',\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n        statusFilter(status) {\n            const statusMap = {\n                enable: 'success',\n                disable: 'danger'\n            }\n            return statusMap[status]\n        }\n    },\n    data() {\n        return {\n            tableKey: 0,\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            },\n            // 表单\n            form: {\n                id: 0,\n                menu_name: '',\n                icons: '',\n                url: '',\n                sort: 1,\n                pid: 0,\n                status: 'enable',\n                text: ''\n            },\n            // 分页数据\n            list: null,\n            // 左侧树数据\n            trees: null,\n            // 表单操作类型\n            dialogStatus: '',\n            // 左侧菜单关键字筛选\n            filterText: '',\n            // 状态值\n            statusOptions: ['enable', 'disable'],\n            // 表单按钮\n            textMap: {\n                update: '编辑',\n                create: '添加'\n            },\n            // 分页数据加载状态\n            listLoading: true,\n            // 左侧树加载状态\n            treeListLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 下载状态\n            downloadLoading: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 表单验证规则\n            rules: {\n                menu_name: [{ required: true, message: '栏目名称 is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {\n        filterText(val) {\n            this.$refs['tree'].filter(val)\n        }\n    },\n    created() {\n        this.getList()\n        this.getTreeList()\n    },\n    methods: {\n        getList() {\n            // 菜单列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        getTreeList() {\n            // 菜单树形列表\n            this.treeListLoading = true\n            fetchTreeList().then(response => {\n                this.trees = response.data\n                this.treeListLoading = false\n            },error => {\n                this.treeListLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        changeParent(e) {\n            // 显示级联菜单名称\n            if (e) {\n                const node = this.$refs.parentTree.getCheckedNodes()[0].data\n                this.form.text = node.name\n            }\n        },\n        clickTreeNode(e) {\n            // 点击左侧菜单查询\n            this.listQuery.id = e.id\n            this.getList()\n        },\n        filterNode(value, data) {\n            if (!value) return true\n            return data.text.indexOf(value) !== -1\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        handleCurrentChange(row) {\n            console.log(row)\n        },\n        resetTemp() {\n            // 重置表单\n            this.form = {\n                id: 0,\n                menu_name: '',\n                icons: '',\n                url: '',\n                sort: 1,\n                pid: 0,\n                status: 'enable',\n                text: ''\n            }\n        },\n        handleModifyStatus(row, status) {\n            // 修改状态\n            this.form = Object.assign({}, row, { status: status }) // copy obj\n            menuState(this.form).then((res) => {\n                this.$message({\n                    message: '操作成功',\n                    type: 'success'\n                })\n                row.status = status\n            },error => {\n                console.log('修改状态失败')\n            })\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加菜单\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createMenu(this.form).then((res) => {\n                        // this.form.id = res.data.id\n                        // this.list.unshift(this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleUpdate(row) {\n            // 唤醒修改菜单\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            // 修改菜单\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    const tempData = Object.assign({}, this.form)\n                    updateMenu(tempData).then((res) => {\n                        // const index = this.list.findIndex(v => v.id === this.form.id)\n                        // this.list.splice(index, 1, this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Update Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将永久删除该菜单, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteMenu(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    // this.list.splice(index, 1)\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n                const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n                const data = this.formatJson(filterVal)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal) {\n            return this.list.map(v => filterVal.map(j => {\n                return v[j]\n            }))\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}