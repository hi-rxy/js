{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\config-group.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\config-group.vue","mtime":1646350589541},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB3YXZlcyBmcm9tICdAL2RpcmVjdGl2ZS93YXZlcycgLy8gd2F2ZXMgZGlyZWN0aXZlCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJy8vIHNlY29uZGFyeSBwYWNrYWdlIGJhc2VkIG9uIGVsLXBhZ2luYXRpb24KaW1wb3J0IHsgZmV0Y2hDb25maWdHcm91cExpc3QsZmV0Y2hDb25maWdHcm91cE9uZSxjcmVhdGVDb25maWdHcm91cCx1cGRhdGVDb25maWdHcm91cCxkZWxldGVDb25maWdHcm91cCxmZXRjaENvbmZpZ0xpc3QsY3JlYXRlQ29uZmlnLHVwZGF0ZUNvbmZpZyxkZWxldGVDb25maWcgfSBmcm9tICdAL2FwaS9jb25maWcnCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnQ29uZmlnR3JvdXAnLAogICAgY29tcG9uZW50czogeyBQYWdpbmF0aW9uIH0sCiAgICBkaXJlY3RpdmVzOiB7IHdhdmVzIH0sCiAgICBmaWx0ZXJzOiB7CiAgICAgICAgc3RhdHVzRmlsdGVyKHN0YXR1cykgewogICAgICAgICAgICBjb25zdCBzdGF0dXNNYXAgPSB7CiAgICAgICAgICAgICAgICBlbmFibGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgIGRpc2FibGU6ICdkYW5nZXInCiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdCiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdGFibGVLZXkgOiAwLAogICAgICAgICAgICAvLyDphY3nva7nu4Qg5qCH562+6aG16ZuG5ZCICiAgICAgICAgICAgIGNvbmZpZ0dyb3VwTGlzdDogbnVsbCwKICAgICAgICAgICAgLy8g6YWN572u57uE6KGo5Y2V5pWw5o2uCiAgICAgICAgICAgIGNvbmZpZ0dyb3VwRGF0YTogbnVsbCwKICAgICAgICAgICAgLy8g6YWN572u57uE5a2X5q616ZuG5ZCI5pWw5o2uCiAgICAgICAgICAgIGNvbmZpZ0dyb3VwRmllbGRzOiBudWxsLAogICAgICAgICAgICAvLyDlvZPliY3mtLvliqjnmoTmoIfnrb7pobUKICAgICAgICAgICAgYWN0aXZlTmFtZTogJycsCiAgICAgICAgICAgIC8vIOafpeivouWPguaVsAogICAgICAgICAgICBsaXN0UXVlcnk6IHsKICAgICAgICAgICAgICAgIHBhZ2U6IDEsCiAgICAgICAgICAgICAgICBsaW1pdDogMTAsCiAgICAgICAgICAgICAgICBzb3J0OiAnLWlkJwogICAgICAgICAgICB9LAogICAgICAgICAgICAvLyDooajljZXlrZfmrrUKICAgICAgICAgICAgZm9ybTp7CiAgICAgICAgICAgICAgICBpZDowLAogICAgICAgICAgICAgICAgZ3JvdXBfaWQ6MCwKICAgICAgICAgICAgICAgIG5hbWU6JycsCiAgICAgICAgICAgICAgICB0aXRsZTonJywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6JycsCiAgICAgICAgICAgICAgICBpbmZvOicnLAogICAgICAgICAgICAgICAgc29ydDoxLAogICAgICAgICAgICAgICAgc3RhdHVzOidlbmFibGUnLAogICAgICAgICAgICAgICAgdHlwZTondGV4dCcsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIOihqOWNleaTjeS9nOexu+WeiwogICAgICAgICAgICBkaWFsb2dTdGF0dXM6ICcnLAogICAgICAgICAgICAvLyDliIbpobXmlbDmja7liqDovb3nirbmgIEKICAgICAgICAgICAgbGlzdExvYWRpbmc6IHRydWUsCiAgICAgICAgICAgIC8vIOm7mOiupOihqOWNleW8ueeqly3pmpDol48KICAgICAgICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICAgICAgICAvLyDooajljZXmj5DkuqTmjInpkq7nirbmgIEKICAgICAgICAgICAgYnV0dG9uU3RhdHVzOmZhbHNlLAogICAgICAgICAgICAvLyDnirbmgIHlgLwKICAgICAgICAgICAgc3RhdHVzT3B0aW9uczogWydlbmFibGUnLCAnZGlzYWJsZSddLAogICAgICAgICAgICAvLyDphY3nva7nsbvlnovlgLwKICAgICAgICAgICAgY29uZmlnVHlwZU9wdGlvbnM6IFsndGV4dCcsICdyYWRpbycsJ3RleHRhcmVhJywnc2VsZWN0JywnZmlsZSddLAogICAgICAgICAgICAvLyDooajljZXmjInpkq4KICAgICAgICAgICAgdGV4dE1hcDogewogICAgICAgICAgICAgICAgY3JlYXRlOiAn5re75Yqg6YWN572u57uEJywKICAgICAgICAgICAgICAgIHVwZGF0ZTogJ+e8lui+kemFjee9rue7hCcsCiAgICAgICAgICAgICAgICBjcmVhdGVDb25maWc6ICfmt7vliqDphY3nva7lrZfmrrUnLAogICAgICAgICAgICAgICAgdXBkYXRlQ29uZmlnOiAn57yW6L6R6YWN572u5a2X5q61JywKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8g6KGo5Y2V6aqM6K+B6KeE5YiZCiAgICAgICAgICAgIHJ1bGVzOiB7CiAgICAgICAgICAgICAgICBuYW1lOiBbeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensCjoi7HmlocpIGlzIHJlcXVpcmVkJywgdHJpZ2dlcjogJ2JsdXInIH1dLAogICAgICAgICAgICAgICAgdGl0bGU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5ZCN56ewKOS4reaWhykgaXMgcmVxdWlyZWQnLCB0cmlnZ2VyOiAnYmx1cicgfV0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDoge30sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldExpc3QoKSB7CiAgICAgICAgICAgIC8vIOmFjee9rue7hOWIl+ihqAogICAgICAgICAgICBmZXRjaENvbmZpZ0dyb3VwTGlzdCh0aGlzLmxpc3RRdWVyeSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZ0dyb3VwTGlzdCA9IHJlc3BvbnNlLmRhdGEuaXRlbXMKICAgICAgICAgICAgICAgIHRoaXMuY29uZmlnR3JvdXBEYXRhID0gT2JqZWN0LmFzc2lnbih7fSx0aGlzLmNvbmZpZ0dyb3VwTGlzdFswXSkKICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlTmFtZSA9IHRoaXMuY29uZmlnR3JvdXBEYXRhLm5hbWUKICAgICAgICAgICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsCiAgICAgICAgICAgICAgICB0aGlzLmdldEZpZWxkTGlzdCgpCiAgICAgICAgICAgIH0sIGVycm9yID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmn6Xor6LlpLHotKUnKQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgZ2V0Q29uZmlnR3JvdXBPbmUgKG5hbWUpIHsKICAgICAgICAgICAgbGV0IGxvYWRpbmdJbnN0YW5jZSA9IHRoaXMuJGxvYWRpbmcoewogICAgICAgICAgICAgICAgJ3RleHQnOifliqDovb3kuK0nLAogICAgICAgICAgICAgICAgJ3RhcmdldCc6ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbmZpZy1ncm91cCcpLAogICAgICAgICAgICAgICAgJ2Z1bGxzY3JlZW4nOiBmYWxzZQogICAgICAgICAgICB9KQogICAgICAgICAgICAvLyDphY3nva7nu4Tor6bmg4UKICAgICAgICAgICAgZmV0Y2hDb25maWdHcm91cE9uZSh7bmFtZTpuYW1lfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZ0dyb3VwRGF0YSA9IHJlc3BvbnNlLmRhdGEKICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsgLy8g5Lul5pyN5Yqh55qE5pa55byP6LCD55So55qEIExvYWRpbmcg6ZyA6KaB5byC5q2l5YWz6ZetCiAgICAgICAgICAgICAgICAgICAgbG9hZGluZ0luc3RhbmNlLmNsb3NlKCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSwgZXJyb3IgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+afpeivouWksei0pScpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBnZXRGaWVsZExpc3QgKCkgewogICAgICAgICAgICAvLyDphY3nva7nu4TlrZfmrrXliJfooagKICAgICAgICAgICAgZmV0Y2hDb25maWdMaXN0KHsgbmFtZTp0aGlzLmFjdGl2ZU5hbWUgfSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmNvbmZpZ0dyb3VwRmllbGRzID0gcmVzLmRhdGEuaXRlbXMKICAgICAgICAgICAgICAgIHRoaXMudG90YWwgPSByZXMuZGF0YS50b3RhbAogICAgICAgICAgICAgICAgdGhpcy5saXN0TG9hZGluZyA9IGZhbHNlCiAgICAgICAgICAgIH0sZXJyb3IgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+afpeivoumFjee9rue7hOWtl+auteWksei0pScpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICByZXNldEZpbHRlcigpIHsKICAgICAgICAgICAgLy8g6YeN572u5p+l6K+iCiAgICAgICAgICAgIHRoaXMubGlzdFF1ZXJ5ID0gewogICAgICAgICAgICAgICAgcGFnZTogMSwKICAgICAgICAgICAgICAgIGxpbWl0OiAxMCwKICAgICAgICAgICAgICAgIHNvcnQ6ICctaWQnCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5nZXRGaWVsZExpc3QoKQogICAgICAgIH0sCiAgICAgICAgaGFuZGxlRmlsdGVyKCkgewogICAgICAgICAgICAvLyDngrnlh7vmn6Xor6IKICAgICAgICAgICAgdGhpcy5saXN0UXVlcnkucGFnZSA9IDEKICAgICAgICAgICAgdGhpcy5nZXRGaWVsZExpc3QoKQogICAgICAgIH0sCiAgICAgICAgcmVzZXRUZW1wKCkgewogICAgICAgICAgICAvLyDph43nva7lt6bkvqfooajljZUKICAgICAgICAgICAgdGhpcy5mb3JtID0gewogICAgICAgICAgICAgICAgaWQ6MCwKICAgICAgICAgICAgICAgIGdyb3VwX2lkOjAsCiAgICAgICAgICAgICAgICB0eXBlOid0ZXh0JywKICAgICAgICAgICAgICAgIG5hbWU6JycsCiAgICAgICAgICAgICAgICB0aXRsZTonJywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6JycsCiAgICAgICAgICAgICAgICBpbmZvOicnLAogICAgICAgICAgICAgICAgc29ydDoxLAogICAgICAgICAgICAgICAgc3RhdHVzOidlbmFibGUnCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNvcnRDaGFuZ2UoZGF0YSkgewogICAgICAgICAgICAvLyDooajmoLzmjpLluo/kuovku7YKICAgICAgICAgICAgY29uc3QgeyBwcm9wLCBvcmRlciB9ID0gZGF0YQogICAgICAgICAgICB0aGlzLnNvcnRCeUNvbHVtbihvcmRlciwgcHJvcCkKICAgICAgICB9LAogICAgICAgIHNvcnRCeUNvbHVtbihvcmRlciwgcHJvcCkgewogICAgICAgICAgICBpZiAob3JkZXIgPT09ICdhc2NlbmRpbmcnKSB7CiAgICAgICAgICAgICAgICB0aGlzLmxpc3RRdWVyeS5zb3J0ID0gJysnICsgcHJvcAogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5saXN0UXVlcnkuc29ydCA9ICctJyArIHByb3AKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmhhbmRsZUZpbHRlcigpCiAgICAgICAgfSwKICAgICAgICBnZXRTb3J0Q2xhc3M6IGZ1bmN0aW9uKGtleSkgewogICAgICAgICAgICAvLyDorr7nva7mjpLluo/lrZfmrrUKICAgICAgICAgICAgY29uc3Qgc29ydCA9IHRoaXMubGlzdFF1ZXJ5LnNvcnQKICAgICAgICAgICAgcmV0dXJuIHNvcnQgPT09IGArJHtrZXl9YCA/ICdhc2NlbmRpbmcnIDogJ2Rlc2NlbmRpbmcnCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVQYW5lVGFiQ2xpY2sob2JqLCBhY3Rpb24pIHsKICAgICAgICAgICAgLy8g5qCH562+6aG154K55Ye75LqL5Lu2CiAgICAgICAgICAgIHRoaXMuYWN0aXZlTmFtZSA9IG9iai5uYW1lCiAgICAgICAgICAgIHRoaXMuZ2V0RmllbGRMaXN0KCkKICAgICAgICAgICAgdGhpcy5nZXRDb25maWdHcm91cE9uZShvYmoubmFtZSkKICAgICAgICB9LAogICAgICAgIGhhbmRsZVBhbmVUYWJzRWRpdCAodGFyZ2V0TmFtZSwgYWN0aW9uKSB7CiAgICAgICAgICAgIC8vIOagh+etvumhtSDmjInpkq7kuovku7Yg5re75Yqg5LiO5Yig6ZmkCiAgICAgICAgICAgIGlmIChhY3Rpb24gPT09ICdhZGQnKSB7CiAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZUNyZWF0ZSgpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKGFjdGlvbiA9PT0gJ3JlbW92ZScpIHsKICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlRGVsZXRlKHRhcmdldE5hbWUpCiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGhhbmRsZUNyZWF0ZSgpIHsKICAgICAgICAgICAgLy8g5ZSk6YaS5re75Yqg5by556qXCiAgICAgICAgICAgIHRoaXMucmVzZXRUZW1wKCkKICAgICAgICAgICAgdGhpcy5kaWFsb2dTdGF0dXMgPSAnY3JlYXRlJwogICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQogICAgICAgICAgICB0aGlzLmJ1dHRvblN0YXR1cyA9IGZhbHNlCiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10uY2xlYXJWYWxpZGF0ZSgpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBjcmVhdGVEYXRhKCkgewogICAgICAgICAgICAvLyDmt7vliqDphY3nva7nu4QKICAgICAgICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgIGNyZWF0ZUNvbmZpZ0dyb3VwKE9iamVjdC5hc3NpZ24oe30sdGhpcy5mb3JtKSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdDcmVhdGVkIFN1Y2Nlc3NmdWxseScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldExpc3QoKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvblN0YXR1cyA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfSxlcnJvciA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvblN0YXR1cyA9IHRydWUKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgdXBkYXRlRGF0YSgpIHsKICAgICAgICAgICAgLy8g5L+u5pS56YWN572u57uECiAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gdHJ1ZQogICAgICAgICAgICB1cGRhdGVDb25maWdHcm91cChPYmplY3QuYXNzaWduKHt9LHRoaXMuY29uZmlnR3JvdXBEYXRhKSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnVXBkYXRlIFN1Y2Nlc3NmdWxseScsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgdGhpcy5nZXRMaXN0KCkKICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gZmFsc2UKICAgICAgICAgICAgfSxlcnJvciA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gdHJ1ZQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgaGFuZGxlRGVsZXRlKG5hbWUpIHsKICAgICAgICAgICAgLy8g56Gu6K6k5Yig6ZmkCiAgICAgICAgICAgIHRoaXMuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuWIoOmZpCAiJytuYW1lKyciIOmFjee9rue7hCwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIGRlbGV0ZUNvbmZpZ0dyb3VwKHRoaXMuY29uZmlnR3JvdXBEYXRhKS50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogJ1N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRGVsZXRlIFN1Y2Nlc3NmdWxseScsCiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICAgICAgICAgICAgICB9LGVycm9yID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5Yig6Zmk5aSx6LSlJykKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVDb25maWdDcmVhdGUoKSB7CiAgICAgICAgICAgIC8vIOWUpOmGkua3u+WKoOW8ueeqlwogICAgICAgICAgICB0aGlzLnJlc2V0VGVtcCgpCiAgICAgICAgICAgIHRoaXMuZGlhbG9nU3RhdHVzID0gJ2NyZWF0ZUNvbmZpZycKICAgICAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IHRydWUKICAgICAgICAgICAgdGhpcy5idXR0b25TdGF0dXMgPSBmYWxzZQogICAgICAgICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLmNsZWFyVmFsaWRhdGUoKQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgY3JlYXRlQ29uZmlnRGF0YSgpIHsKICAgICAgICAgICAgLy8g5re75Yqg6YWN572u57uECiAgICAgICAgICAgIHRoaXMuJHJlZnNbJ2RhdGFGb3JtJ10udmFsaWRhdGUoKHZhbGlkKSA9PiB7CiAgICAgICAgICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvblN0YXR1cyA9IHRydWUKICAgICAgICAgICAgICAgICAgICBjcmVhdGVDb25maWcoT2JqZWN0LmFzc2lnbih7fSx0aGlzLmZvcm0se2dyb3VwX2lkOnRoaXMuY29uZmlnR3JvdXBEYXRhLmlkfSkpLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQ3JlYXRlZCBTdWNjZXNzZnVsbHknLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDIwMDAKICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRGaWVsZExpc3QoKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvblN0YXR1cyA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfSxlcnJvciA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmJ1dHRvblN0YXR1cyA9IHRydWUKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgaGFuZGxlQ29uZmlnVXBkYXRlKHJvdykgewogICAgICAgICAgICAvLyDllKTphpLkv67mlLkKICAgICAgICAgICAgdGhpcy5mb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgcm93KSAvLyBjb3B5IG9iagogICAgICAgICAgICB0aGlzLmRpYWxvZ1N0YXR1cyA9ICd1cGRhdGVDb25maWcnCiAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlCiAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gZmFsc2UKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy4kcmVmc1snZGF0YUZvcm0nXS5jbGVhclZhbGlkYXRlKCkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIHVwZGF0ZUNvbmZpZ0RhdGEoKSB7CiAgICAgICAgICAgIC8vIOS/ruaUuemFjee9rue7hAogICAgICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKCh2YWxpZCkgPT4gewogICAgICAgICAgICAgICAgaWYgKHZhbGlkKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5idXR0b25TdGF0dXMgPSB0cnVlCiAgICAgICAgICAgICAgICAgICAgdXBkYXRlQ29uZmlnKE9iamVjdC5hc3NpZ24oe30sdGhpcy5mb3JtKSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRub3RpZnkoewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdDcmVhdGVkIFN1Y2Nlc3NmdWxseScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEZpZWxkTGlzdCgpCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICB9LGVycm9yID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYnV0dG9uU3RhdHVzID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVDb25maWdEZWxldGUocm93LCBpbmRleCkgewogICAgICAgICAgICAvLyDnoa7orqTliKDpmaQKICAgICAgICAgICAgdGhpcy4kY29uZmlybSgn5q2k5pON5L2c5bCG5Yig6Zmk6K+l5a2X5q614oCcJytyb3cubmFtZSsn4oCdLCDmmK/lkKbnu6fnu60/JywgJ+aPkOekuicsIHsKICAgICAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICAgICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5mb3JtID0gT2JqZWN0LmFzc2lnbih7fSwgcm93KQogICAgICAgICAgICAgICAgZGVsZXRlQ29uZmlnKHRoaXMuZm9ybSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0RlbGV0ZSBTdWNjZXNzZnVsbHknLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB0aGlzLmdldEZpZWxkTGlzdCgpCiAgICAgICAgICAgICAgICB9LGVycm9yID0+IHsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn5Yig6Zmk5aSx6LSlJykKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgIH0KfQo="},{"version":3,"sources":["config-group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"config-group.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <template>\n                        <el-tabs class=\"config-group\" editable v-model=\"activeName\" @tab-click=\"handlePaneTabClick\" @edit=\"handlePaneTabsEdit\">\n                            <el-tab-pane v-for=\"item in configGroupList\" :key=\"item.id\" :label=\"item.title\" :name=\"item.name\">\n                                <el-col :span=\"8\">\n                                    <el-card class=\"box-card\">\n                                        <el-form :model=\"configGroupData\" label-position=\"right\" label-width=\"90px\">\n                                            <el-form-item label=\"名称(英文)\" prop=\"name\">\n                                                <el-input v-model=\"configGroupData.name\"/>\n                                            </el-form-item>\n                                            <el-form-item label=\"名称(中文)\" prop=\"title\">\n                                                <el-input v-model=\"configGroupData.title\"/>\n                                            </el-form-item>\n                                            <el-form-item label=\"状态\" prop=\"status\">\n                                                <el-select v-model=\"configGroupData.status\" class=\"filter-item\" placeholder=\"Please select\">\n                                                    <el-option v-for=\"value in statusOptions\" :key=\"value\" :label=\"value\" :value=\"value\"/>\n                                                </el-select>\n                                            </el-form-item>\n                                            <el-form-item label=\"排序\" prop=\"sort\">\n                                                <el-input v-model=\"configGroupData.sort\"/>\n                                            </el-form-item>\n                                            <el-form-item>\n                                                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"updateData\">保存</el-button>\n                                            </el-form-item>\n                                        </el-form>\n                                    </el-card>\n                                </el-col>\n                                <el-col :span=\"16\">\n                                    <el-card class=\"box-card\">\n                                        <!--  搜索开始  -->\n                                        <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                                            <el-input v-model=\"listQuery.name\" placeholder=\"名称\" style=\"width: 200px;\"\n                                                      class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                                            />\n                                            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                                       icon=\"el-icon-search\" @click=\"handleFilter\"\n                                            >\n                                                搜索\n                                            </el-button>\n                                            <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                                       icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                                            >\n                                                清除\n                                            </el-button>\n                                            <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                                       @click=\"handleConfigCreate\"\n                                            >\n                                                增加\n                                            </el-button>\n                                        </div>\n                                        <!--  搜索结束  -->\n\n                                        <!--  表格开始  -->\n                                        <el-table\n                                            :key=\"tableKey\"\n                                            v-loading=\"listLoading\"\n                                            element-loading-text=\"拼命加载中\"\n                                            element-loading-spinner=\"el-icon-loading\"\n                                            element-loading-background=\"rgba(245, 247, 250, 1)\"\n                                            :data=\"configGroupFields\"\n                                            border\n                                            fit\n                                            highlight-current-row\n                                            style=\"width: 100%;\"\n                                            @sort-change=\"sortChange\"\n                                        >\n                                            <!--  字段开始    -->\n                                            <el-table-column label=\"英文名称\" prop=\"name\"  align=\"center\">\n                                                <template slot-scope=\"{row}\">\n                                                    <span>{{ row.name }}</span>\n                                                </template>\n                                            </el-table-column>\n                                            <el-table-column label=\"中文名称\" align=\"center\">\n                                                <template slot-scope=\"{row}\">\n                                                    <span>{{ row.title }}</span>\n                                                </template>\n                                            </el-table-column>\n                                            <el-table-column label=\"状态\" align=\"center\" class-name=\"status-col\">\n                                                <template slot-scope=\"{row}\">\n                                                    <el-tag :type=\"row.status | statusFilter\">\n                                                        {{ row.status }}\n                                                    </el-tag>\n                                                </template>\n                                            </el-table-column>\n                                            <el-table-column label=\"排序\" align=\"center\" sortable=\"custom\" prop=\"sort\" :class-name=\"getSortClass('sort')\">\n                                                <template slot-scope=\"{row}\">\n                                                    <span>{{ row.sort }}</span>\n                                                </template>\n                                            </el-table-column>\n                                            <!--  字段结束   -->\n                                            <!--  操作开始   -->\n                                            <el-table-column label=\"操作\" align=\"center\" width=\"150px\" class-name=\"small-padding fixed-width\">\n                                                <template slot-scope=\"{row,$index}\">\n                                                    <el-button type=\"primary\" size=\"mini\" @click=\"handleConfigUpdate(row)\">\n                                                        编辑\n                                                    </el-button>\n                                                    <el-button size=\"mini\" type=\"danger\" @click=\"handleConfigDelete(row,$index)\">\n                                                        删除\n                                                    </el-button>\n                                                </template>\n                                            </el-table-column>\n                                            <!--  操作结束   -->\n                                        </el-table>\n                                        <!--  表格结束  -->\n\n                                        <!--  分页开始  -->\n                                        <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                                    :limit.sync=\"listQuery.limit\" @pagination=\"getFieldList\"\n                                        />\n                                        <!--  分页结束  -->\n                                    </el-card>\n                                </el-col>\n                            </el-tab-pane>\n                        </el-tabs>\n                    </template>\n                </el-card>\n            </el-col>\n        </el-row>\n\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"90px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"名称(英文)\" prop=\"name\">\n                    <el-input v-model=\"form.name\"/>\n                </el-form-item>\n                <el-form-item label=\"名称(中文)\" prop=\"title\">\n                    <el-input v-model=\"form.title\"/>\n                </el-form-item>\n                <el-form-item v-if=\"dialogStatus !== 'create'\" label=\"字段说明\" prop=\"message\">\n                    <el-input v-model=\"form.message\"/>\n                </el-form-item>\n                <el-form-item v-if=\"dialogStatus !== 'create'\" label=\"参数类型\" prop=\"type\">\n                    <el-select v-model=\"form.type\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in configTypeOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item v-if=\"dialogStatus !== 'create'\" label=\"参数说明\" prop=\"info\">\n                    <el-input v-model=\"form.info\"/>\n                </el-form-item>\n                <el-form-item label=\"状态\" prop=\"status\">\n                    <el-select v-model=\"form.status\" class=\"filter-item\" placeholder=\"Please select\">\n                        <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"排序\" prop=\"sort\">\n                    <el-input v-model=\"form.sort\"/>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():(dialogStatus==='createConfig'?createConfigData():updateConfigData())\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n    </div>\n</template>\n\n<script>\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination'// secondary package based on el-pagination\nimport { fetchConfigGroupList,fetchConfigGroupOne,createConfigGroup,updateConfigGroup,deleteConfigGroup,fetchConfigList,createConfig,updateConfig,deleteConfig } from '@/api/config'\n\nexport default {\n    name: 'ConfigGroup',\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n        statusFilter(status) {\n            const statusMap = {\n                enable: 'success',\n                disable: 'danger'\n            }\n            return statusMap[status]\n        }\n    },\n    data() {\n        return {\n            tableKey : 0,\n            // 配置组 标签页集合\n            configGroupList: null,\n            // 配置组表单数据\n            configGroupData: null,\n            // 配置组字段集合数据\n            configGroupFields: null,\n            // 当前活动的标签页\n            activeName: '',\n            // 查询参数\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            },\n            // 表单字段\n            form:{\n                id:0,\n                group_id:0,\n                name:'',\n                title:'',\n                message:'',\n                info:'',\n                sort:1,\n                status:'enable',\n                type:'text',\n            },\n            // 表单操作类型\n            dialogStatus: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 状态值\n            statusOptions: ['enable', 'disable'],\n            // 配置类型值\n            configTypeOptions: ['text', 'radio','textarea','select','file'],\n            // 表单按钮\n            textMap: {\n                create: '添加配置组',\n                update: '编辑配置组',\n                createConfig: '添加配置字段',\n                updateConfig: '编辑配置字段',\n            },\n            // 表单验证规则\n            rules: {\n                name: [{ required: true, message: '名称(英文) is required', trigger: 'blur' }],\n                title: [{ required: true, message: '名称(中文) is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {},\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            // 配置组列表\n            fetchConfigGroupList(this.listQuery).then(response => {\n                this.configGroupList = response.data.items\n                this.configGroupData = Object.assign({},this.configGroupList[0])\n                this.activeName = this.configGroupData.name\n                this.total = response.data.total\n                this.getFieldList()\n            }, error => {\n                console.log('查询失败')\n            })\n        },\n        getConfigGroupOne (name) {\n            let loadingInstance = this.$loading({\n                'text':'加载中',\n                'target':document.querySelector('.config-group'),\n                'fullscreen': false\n            })\n            // 配置组详情\n            fetchConfigGroupOne({name:name}).then(response => {\n                this.configGroupData = response.data\n                this.$nextTick(() => { // 以服务的方式调用的 Loading 需要异步关闭\n                    loadingInstance.close();\n                });\n            }, error => {\n                console.log('查询失败')\n            })\n        },\n        getFieldList () {\n            // 配置组字段列表\n            fetchConfigList({ name:this.activeName }).then((res) => {\n                this.configGroupFields = res.data.items\n                this.total = res.data.total\n                this.listLoading = false\n            },error => {\n                console.log('查询配置组字段失败')\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            }\n            this.getFieldList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getFieldList()\n        },\n        resetTemp() {\n            // 重置左侧表单\n            this.form = {\n                id:0,\n                group_id:0,\n                type:'text',\n                name:'',\n                title:'',\n                message:'',\n                info:'',\n                sort:1,\n                status:'enable'\n            }\n        },\n        sortChange(data) {\n            // 表格排序事件\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        getSortClass: function(key) {\n            // 设置排序字段\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        },\n        handlePaneTabClick(obj, action) {\n            // 标签页点击事件\n            this.activeName = obj.name\n            this.getFieldList()\n            this.getConfigGroupOne(obj.name)\n        },\n        handlePaneTabsEdit (targetName, action) {\n            // 标签页 按钮事件 添加与删除\n            if (action === 'add') {\n                this.handleCreate()\n            }\n            if (action === 'remove') {\n                this.handleDelete(targetName)\n            }\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createConfigGroup(Object.assign({},this.form)).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        updateData() {\n            // 修改配置组\n            this.buttonStatus = true\n            updateConfigGroup(Object.assign({},this.configGroupData)).then((res) => {\n                this.dialogFormVisible = false\n                this.$notify({\n                    title: 'Success',\n                    message: 'Update Successfully',\n                    type: 'success',\n                    duration: 2000\n                })\n                this.getList()\n                this.buttonStatus = false\n            },error => {\n                this.dialogFormVisible = false\n                this.buttonStatus = true\n            })\n        },\n        handleDelete(name) {\n            // 确认删除\n            this.$confirm('此操作将删除 \"'+name+'\" 配置组, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                deleteConfigGroup(this.configGroupData).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleConfigCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'createConfig'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createConfigData() {\n            // 添加配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createConfig(Object.assign({},this.form,{group_id:this.configGroupData.id})).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getFieldList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleConfigUpdate(row) {\n            // 唤醒修改\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'updateConfig'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateConfigData() {\n            // 修改配置组\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    updateConfig(Object.assign({},this.form)).then((res) => {\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getFieldList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleConfigDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将删除该字段“'+row.name+'”, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteConfig(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getFieldList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n    }\n}\n</script>\n"]}]}