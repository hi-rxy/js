{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\role\\index.vue","mtime":1646052767623},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/views/system/role","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.name\" placeholder=\"角色名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                   @click=\"handleCreate\"\n                        >\n                            增加\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"tableKey\"\n                        v-loading=\"listLoading\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column label=\"角色名称\" prop=\"name\"  align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"描述\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.description }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"创建时间\" align=\"center\" sortable=\"custom\" prop=\"created_at\" :class-name=\"getSortClass('created_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.created_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"修改时间\" align=\"center\" sortable=\"custom\" prop=\"updated_at\" :class-name=\"getSortClass('updated_at')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.updated_at }}</span>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"260px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleAssignPermissions(row)\">\n                                    分配权限\n                                </el-button>\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    编辑\n                                </el-button>\n                                <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n                                    删除\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"80px\"\n                     style=\"width: 400px; margin-left:50px;\"\n            >\n                <el-form-item label=\"角色名称\" prop=\"name\">\n                    <el-input v-model=\"form.name\"/>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop=\"description\">\n                    <el-input\n                        type=\"textarea\"\n                        :rows=\"2\"\n                        placeholder=\"请输入描述\"\n                        v-model=\"form.description\">\n                    </el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():updateData()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n    </div>\n</template>\n\n<script>\nimport { fetchList, createRole,updateRole, deleteRole } from '@/api/role'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n    name: 'Role',\n    components: { Pagination },\n    directives: { waves },\n    data() {\n        return {\n            tableKey: 0,\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-created_at'\n            },\n            // 表单\n            form: {\n                name: '',\n                description: '',\n            },\n            // 表单按钮\n            textMap: {\n                update: '编辑',\n                create: '添加'\n            },\n            // 分页数据\n            list: null,\n            // 表单操作类型\n            dialogStatus: '',\n            // 分页数据加载状态\n            listLoading: true,\n            // 表单显示状态\n            dialogFormVisible: false,\n            // 下载状态\n            downloadLoading: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 表单验证规则\n            rules: {\n                name: [{ required: true, message: '角色名称 is required', trigger: 'blur' }],\n                description: [{ required: true, message: '描述 is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {},\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            // 角色列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-created_at'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        resetTemp() {\n            // 重置表单\n            this.form = {\n                name: '',\n                description: '',\n            }\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加角色\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    this.form.newName = this.form.name\n                    createRole(this.form).then((res) => {\n                        //this.list.unshift(this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    })\n                }\n            })\n        },\n        handleAssignPermissions (row) {\n            this.$router.push({ path: '/role/permission', query: { name:row.name }})\n        },\n        handleUpdate(row) {\n            // 唤醒修改角色\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            // 修改角色\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    this.form.newName = this.form.name\n                    const tempData = Object.assign({}, this.form)\n                    updateRole(tempData).then((res) => {\n                        // const index = this.list.findIndex(v => v.name === this.form.name)\n                        // this.list.splice(index, 1, this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Update Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    })\n                }\n            })\n        },\n        handleDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将永久删除该角色, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteRole(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    // this.list.splice(index, 1)\n                    this.getList()\n                })\n            })\n        },\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n                const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n                const data = this.formatJson(filterVal)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal) {\n            return this.list.map(v => filterVal.map(j => {\n                return v[j]\n            }))\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}