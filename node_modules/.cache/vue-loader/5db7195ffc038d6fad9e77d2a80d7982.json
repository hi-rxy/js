{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\tree-menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\tree-menu.vue","mtime":1646662292577},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["tree-menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"tree-menu.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.menu_name\" placeholder=\"菜单名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                        <el-button class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\" icon=\"el-icon-edit\"\n                                   @click=\"handleCreate\"\n                        >\n                            增加\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        row-key=\"id\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        max-height=\"750\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column\n                            type=\"selection\"\n                            width=\"40\">\n                        </el-table-column>\n                        <el-table-column label=\"菜单\" align=\"center\" width=\"180\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.menu_name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"排序\" align=\"center\" width=\"80\" prop=\"sort\" sortable=\"custom\"\n                                         :class-name=\"getSortClass('sort')\"\n                        >\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.sort }}</span>\n                                <!--<el-input v-model=\"form.sort\" @change=\"handleCurrentChange(row)\" />-->\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"图标\" align=\"center\" width=\"80\">\n                            <template slot-scope=\"{row}\">\n                                <span><svg-icon :icon-class=\"row.icons\" class-name=\"card-panel-icon\"/></span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"路由名称\" align=\"center\" show-overflow-tooltip>\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"路径\" align=\"center\" show-overflow-tooltip>\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.path }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"缓存\" align=\"center\" show-overflow-tooltip>\n                            <template slot-scope=\"{row}\">\n                                <el-tag :type=\"row.no_cache | boolFilter\">\n                                    {{ row.no_cache }}\n                                </el-tag>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"面包屑\" align=\"center\" show-overflow-tooltip>\n                            <template slot-scope=\"{row}\">\n                                <el-tag :type=\"row.breadcrumb | boolFilter\">\n                                    {{ row.breadcrumb }}\n                                </el-tag>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"固定\" align=\"center\" show-overflow-tooltip>\n                            <template slot-scope=\"{row}\">\n                                <el-tag :type=\"row.affix | boolFilter\">\n                                    {{ row.affix }}\n                                </el-tag>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"状态\" align=\"center\" width=\"100\" class-name=\"status-col\">\n                            <template slot-scope=\"{row}\">\n                                <el-tag :type=\"row.status | statusFilter\">\n                                    {{ row.status }}\n                                </el-tag>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"240px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    编辑\n                                </el-button>\n                                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"success\"\n                                           @click=\"handleModifyStatus(row,'enable')\"\n                                >\n                                    开启\n                                </el-button>\n                                <el-button v-if=\"row.status!=='disable'\" size=\"mini\"\n                                           @click=\"handleModifyStatus(row,'disable')\"\n                                >\n                                    禁用\n                                </el-button>\n                                <el-button v-if=\"row.status!=='enable'\" size=\"mini\" type=\"danger\"\n                                           @click=\"handleDelete(row,$index)\"\n                                >\n                                    删除\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n        <!-- form 表单 -->\n        <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n            <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"form\" label-position=\"right\" label-width=\"70px\"\n            >\n                <el-row :gutter=\"20\">\n                    <el-col :span=\"12\">\n                        <el-form-item label=\"上级\" prop=\"pid\">\n                            <el-cascader\n                                :options=\"trees\"\n                                v-model=\"form.pid\"\n                                :props=\"{\n                      checkStrictly: true,\n                      emitPath: false,\n                      label: 'menu_name',\n                      value: 'id',\n                      children: 'children'\n                    }\"\n                                :show-all-levels=\"false\"\n                                placeholder=\"父级菜单\"\n                                collapse-tags\n                                clearable\n                                @change=\"changeParent\"\n                                clearable\n                            ></el-cascader>\n                        </el-form-item>\n                        <el-form-item label=\"名称\" prop=\"menu_name\">\n                            <el-input v-model=\"form.menu_name\"/>\n                        </el-form-item>\n                        <el-form-item label=\"图标\" prop=\"icons\">\n                            <el-input v-model=\"form.icons\"/>\n                        </el-form-item>\n                        <el-form-item label=\"地址\" prop=\"url\">\n                            <el-input v-model=\"form.url\"/>\n                        </el-form-item>\n                        <el-form-item label=\"状态\" prop=\"status\">\n                            <el-select v-model=\"form.status\" class=\"filter-item\" placeholder=\"Please select\">\n                                <el-option v-for=\"item in statusOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"排序\" prop=\"sort\">\n                            <el-input v-model=\"form.sort\"/>\n                        </el-form-item>\n                    </el-col>\n                    <el-col :span=\"12\">\n                        <el-form-item label=\"接口地址\" prop=\"url\">\n                            <el-input v-model=\"form.url\"/>\n                        </el-form-item>\n                        <el-form-item label=\"路由名称\" prop=\"name\">\n                            <el-input v-model=\"form.name\"/>\n                        </el-form-item>\n                        <el-form-item label=\"路径\" prop=\"path\">\n                            <el-input v-model=\"form.path\"/>\n                        </el-form-item>\n                        <el-form-item label=\"缓存\" prop=\"no_cache\">\n                            <el-select v-model=\"form.no_cache\" class=\"filter-item\" placeholder=\"Please select\">\n                                <el-option v-for=\"item in boolOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"面包屑\" prop=\"breadcrumb\">\n                            <el-select v-model=\"form.breadcrumb\" class=\"filter-item\" placeholder=\"Please select\">\n                                <el-option v-for=\"item in boolOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                            </el-select>\n                        </el-form-item>\n                        <el-form-item label=\"固定\" prop=\"affix\">\n                            <el-select v-model=\"form.affix\" class=\"filter-item\" placeholder=\"Please select\">\n                                <el-option v-for=\"item in boolOptions\" :key=\"item\" :label=\"item\" :value=\"item\"/>\n                            </el-select>\n                        </el-form-item>\n                    </el-col>\n                </el-row>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogFormVisible = false\">\n                    取消\n                </el-button>\n                <el-button type=\"primary\" :disabled=\"buttonStatus\" @click=\"dialogStatus==='create'?createData():updateData()\">\n                    确认\n                </el-button>\n            </div>\n        </el-dialog>\n        <!-- form 表单 -->\n    </div>\n</template>\n\n<script>\nimport { fetchTreeList, createMenu, updateMenu, deleteMenu, menuState } from '@/api/menu'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n    name: 'TreeMenu',\n    components: { Pagination },\n    directives: { waves },\n    filters: {\n        statusFilter(status) {\n            const statusMap = {\n                enable: 'success',\n                disable: 'danger'\n            }\n            return statusMap[status]\n        },\n        boolFilter(value) {\n            const statusMap = {\n                show: 'success',\n                hidden: 'danger'\n            }\n            return statusMap[value]\n        }\n    },\n    data() {\n        return {\n            tableKey: 0,\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            },\n            // 表单\n            form: {\n                id: 0,\n                menu_name: '',\n                icons: '',\n                url: '',\n                sort: 1,\n                pid: 0,\n                status: 'enable',\n                text: '',\n                name:'',\n                path:'',\n                no_cache:'hidden',\n                breadcrumb:'show',\n                affix:'hidden',\n            },\n            // 分页数据\n            list: [],\n            // 左侧树数据\n            trees: null,\n            // 表单操作类型\n            dialogStatus: '',\n            // 左侧菜单关键字筛选\n            filterText: '',\n            // 状态值\n            statusOptions: ['enable', 'disable'],\n            // 状态值\n            boolOptions: ['show', 'hidden'],\n            // 表单按钮\n            textMap: {\n                update: '编辑',\n                create: '添加'\n            },\n            // 分页数据加载状态\n            listLoading: true,\n            // 默认表单弹窗-隐藏\n            dialogFormVisible: false,\n            // 下载状态\n            downloadLoading: false,\n            // 表单提交按钮状态\n            buttonStatus:false,\n            // 表单验证规则\n            rules: {\n                menu_name: [{ required: true, message: '栏目名称 is required', trigger: 'blur' }]\n            }\n        }\n    },\n    watch: {\n    },\n    created() {\n        this.getList()\n        this.getTreeList()\n    },\n    methods: {\n        getList() {\n            // 菜单列表\n            this.listLoading = true\n            fetchTreeList(this.listQuery).then(response => {\n                this.list = response.data\n                // this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        getTreeList() {\n            // 菜单树形列表\n            fetchTreeList().then(response => {\n                this.trees = response.data\n            },error => {\n                console.log('请求出错')\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-id'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        changeParent(e) {\n            // 显示级联菜单名称\n            if (e) {\n                const node = this.$refs.parentTree.getCheckedNodes()[0].data\n                this.form.text = node.name\n            }\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        handleCurrentChange(row) {\n            console.log(row)\n        },\n        resetTemp() {\n            // 重置表单\n            this.form = {\n                id: 0,\n                menu_name: '',\n                icons: '',\n                url: '',\n                sort: 1,\n                pid: 0,\n                status: 'enable',\n                text: '',\n                name:'',\n                path:'',\n                no_cache:'hidden',\n                breadcrumb:'show',\n                affix:'hidden',\n            }\n        },\n        handleModifyStatus(row, status) {\n            // 修改状态\n            this.form = Object.assign({}, row, { status: status }) // copy obj\n            menuState(this.form).then((res) => {\n                this.$message({\n                    message: '操作成功',\n                    type: 'success'\n                })\n                row.status = status\n            },error => {\n                console.log('修改状态失败')\n            })\n        },\n        handleCreate() {\n            // 唤醒添加弹窗\n            this.resetTemp()\n            this.dialogStatus = 'create'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        createData() {\n            // 添加菜单\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    createMenu(this.form).then((res) => {\n                        // this.form.id = res.data.id\n                        // this.list.unshift(this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Created Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleUpdate(row) {\n            // 唤醒修改菜单\n            this.form = Object.assign({}, row) // copy obj\n            this.dialogStatus = 'update'\n            this.dialogFormVisible = true\n            this.buttonStatus = false\n            this.$nextTick(() => {\n                this.$refs['dataForm'].clearValidate()\n            })\n        },\n        updateData() {\n            // 修改菜单\n            this.$refs['dataForm'].validate((valid) => {\n                if (valid) {\n                    this.buttonStatus = true\n                    const tempData = Object.assign({}, this.form)\n                    updateMenu(tempData).then((res) => {\n                        // const index = this.list.findIndex(v => v.id === this.form.id)\n                        // this.list.splice(index, 1, this.form)\n                        this.dialogFormVisible = false\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Update Successfully',\n                            type: 'success',\n                            duration: 2000\n                        })\n                        this.getList()\n                        this.buttonStatus = false\n                    },error => {\n                        this.dialogFormVisible = false\n                        this.buttonStatus = true\n                    })\n                }\n            })\n        },\n        handleDelete(row, index) {\n            // 确认删除\n            this.$confirm('此操作将永久删除该菜单, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                this.form = Object.assign({}, row)\n                deleteMenu(this.form).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    // this.list.splice(index, 1)\n                    this.getList()\n                },error => {\n                    console.log('删除失败')\n                })\n            })\n        },\n        handleDownload() {\n            this.downloadLoading = true\n            import('@/vendor/Export2Excel').then(excel => {\n                const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']\n                const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']\n                const data = this.formatJson(filterVal)\n                excel.export_json_to_excel({\n                    header: tHeader,\n                    data,\n                    filename: 'table-list'\n                })\n                this.downloadLoading = false\n            })\n        },\n        formatJson(filterVal) {\n            return this.list.map(v => filterVal.map(j => {\n                return v[j]\n            }))\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}