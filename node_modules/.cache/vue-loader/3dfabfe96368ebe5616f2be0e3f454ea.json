{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\menu.vue?vue&type=template&id=3e16bcd6&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\menu.vue","mtime":1646547803827},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1645316880001},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzPSJhcHAtY29udGFpbmVyIj4KICAgICAgICA8ZWwtcm93IDpndXR0ZXI9IjIwIj4KICAgICAgICAgICAgPGVsLWNvbCA6c3Bhbj0iNCI+CiAgICAgICAgICAgICAgICA8ZWwtY2FyZCBjbGFzcz0iYm94LWNhcmQiPgogICAgICAgICAgICAgICAgICAgIDxlbC1pbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJmaWx0ZXJUZXh0IgogICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0i6L6T5YWl5YWz6ZSu5a2X6L+b6KGM6L+H5rukIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgoKICAgICAgICAgICAgICAgICAgICA8ZWwtdHJlZQogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmlsdGVyLXRyZWUiCiAgICAgICAgICAgICAgICAgICAgICAgIHYtbG9hZGluZz0idHJlZUxpc3RMb2FkaW5nIgogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LWxvYWRpbmctdGV4dD0i5ou85ZG95Yqg6L295LitIgogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LWxvYWRpbmctc3Bpbm5lcj0iZWwtaWNvbi1sb2FkaW5nIgogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LWxvYWRpbmctYmFja2dyb3VuZD0icmdiYSgyNDUsIDI0NywgMjUwLCAxKSIKICAgICAgICAgICAgICAgICAgICAgICAgOmRhdGE9InRyZWVzIgogICAgICAgICAgICAgICAgICAgICAgICA6cHJvcHM9InsKICAgICAgICAgICAgICBsYWJlbDogJ3RleHQnLAogICAgICAgICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nCiAgICAgICAgICAgIH0iCiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGUta2V5PSJpZCIKICAgICAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQKICAgICAgICAgICAgICAgICAgICAgICAgYWNjb3JkaW9uCiAgICAgICAgICAgICAgICAgICAgICAgIDpmaWx0ZXItbm9kZS1tZXRob2Q9ImZpbHRlck5vZGUiCiAgICAgICAgICAgICAgICAgICAgICAgIEBub2RlLWNsaWNrPSJjbGlja1RyZWVOb2RlIgogICAgICAgICAgICAgICAgICAgICAgICByZWY9InRyZWUiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIDwvZWwtdHJlZT4KICAgICAgICAgICAgICAgIDwvZWwtY2FyZD4KICAgICAgICAgICAgPC9lbC1jb2w+CiAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjIwIj4KICAgICAgICAgICAgICAgIDxlbC1jYXJkIGNsYXNzPSJib3gtY2FyZCI+CiAgICAgICAgICAgICAgICAgICAgPCEtLSAg5pCc57Si5byA5aeLICAtLT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmaWx0ZXItY29udGFpbmVyIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMTVweDsiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0ibGlzdFF1ZXJ5Lm1lbnVfbmFtZSIgcGxhY2Vob2xkZXI9IuiPnOWNleWQjeensCIgc3R5bGU9IndpZHRoOiAyMDBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmlsdGVyLWl0ZW0iIEBrZXl1cC5lbnRlci5uYXRpdmU9ImhhbmRsZUZpbHRlciIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXdhdmVzIGNsYXNzPSJmaWx0ZXItaXRlbSIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyIgdHlwZT0icHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uPSJlbC1pY29uLXNlYXJjaCIgQGNsaWNrPSJoYW5kbGVGaWx0ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIOaQnOe0ogogICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXdhdmVzIGNsYXNzPSJmaWx0ZXItaXRlbSIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyIgdHlwZT0icHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpY29uPSJlbC1pY29uLXJlZnJlc2giIEBjbGljaz0icmVzZXRGaWx0ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIOa4hemZpAogICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBjbGFzcz0iZmlsdGVyLWl0ZW0iIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsiIHR5cGU9InByaW1hcnkiIGljb249ImVsLWljb24tZWRpdCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImhhbmRsZUNyZWF0ZSIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAg5aKe5YqgCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtYnV0dG9uPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXdhdmVzIDpsb2FkaW5nPSJkb3dubG9hZExvYWRpbmciIGNsYXNzPSJmaWx0ZXItaXRlbSIgdHlwZT0icHJpbWFyeSItLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj0iZWwtaWNvbi1kb3dubG9hZCIgQGNsaWNrPSJoYW5kbGVEb3dubG9hZCItLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgID4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgICDlr7zlh7otLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtYnV0dG9uPi0tPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwhLS0gIOaQnOe0oue7k+adnyAgLS0+CgogICAgICAgICAgICAgICAgICAgIDwhLS0gIOihqOagvOW8gOWniyAgLS0+CiAgICAgICAgICAgICAgICAgICAgPGVsLXRhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9InRhYmxlS2V5IgogICAgICAgICAgICAgICAgICAgICAgICB2LWxvYWRpbmc9Imxpc3RMb2FkaW5nIgogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LWxvYWRpbmctdGV4dD0i5ou85ZG95Yqg6L295LitIgogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LWxvYWRpbmctc3Bpbm5lcj0iZWwtaWNvbi1sb2FkaW5nIgogICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LWxvYWRpbmctYmFja2dyb3VuZD0icmdiYSgyNDUsIDI0NywgMjUwLCAxKSIKICAgICAgICAgICAgICAgICAgICAgICAgOmRhdGE9Imxpc3QiCiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcgogICAgICAgICAgICAgICAgICAgICAgICBmaXQKICAgICAgICAgICAgICAgICAgICAgICAgc2hvdy1oZWFkZXIKICAgICAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMTAwJTsiCiAgICAgICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ9IjYwMCIKICAgICAgICAgICAgICAgICAgICAgICAgQHNvcnQtY2hhbmdlPSJzb3J0Q2hhbmdlIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSAg5a2X5q615byA5aeLICAgIC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJzZWxlY3Rpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iNDAiPgogICAgICAgICAgICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i57yW5Y+3IiBwcm9wPSJpZCIgc29ydGFibGU9ImN1c3RvbSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjgwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpjbGFzcy1uYW1lPSJnZXRTb3J0Q2xhc3MoJ2lkJykiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJ7cm93fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgcm93LmlkIH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuiPnOWNlSIgYWxpZ249ImNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ie3Jvd30iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IHJvdy5tZW51X25hbWUgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5Zu+5qCHIiBhbGlnbj0iY2VudGVyIiBzaG93LW92ZXJmbG93LXRvb2x0aXA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ie3Jvd30iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IHJvdy5pY29ucyB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLlnLDlnYAiIGFsaWduPSJjZW50ZXIiIHNob3ctb3ZlcmZsb3ctdG9vbHRpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJ7cm93fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgcm93LnVybCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHNob3ctb3ZlcmZsb3ctdG9vbHRpcCBsYWJlbD0i5Yib5bu65pe26Ze0IiB3aWR0aD0iMTgwIiBhbGlnbj0iY2VudGVyIiBzb3J0YWJsZT0iY3VzdG9tIiBwcm9wPSJjcmVhdGVkX2F0IiA6Y2xhc3MtbmFtZT0iZ2V0U29ydENsYXNzKCdjcmVhdGVkX2F0JykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9Intyb3d9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyByb3cuY3JlYXRlZF9hdCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIHNob3ctb3ZlcmZsb3ctdG9vbHRpcCBsYWJlbD0i5L+u5pS55pe26Ze0IiB3aWR0aD0iMTgwIiBhbGlnbj0iY2VudGVyIiBzb3J0YWJsZT0iY3VzdG9tIiBwcm9wPSJ1cGRhdGVkX2F0IiA6Y2xhc3MtbmFtZT0iZ2V0U29ydENsYXNzKCd1cGRhdGVkX2F0JykiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9Intyb3d9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyByb3cudXBkYXRlZF9hdCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFibGUtY29sdW1uIGxhYmVsPSLnirbmgIEiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSIxMDAiIGNsYXNzLW5hbWU9InN0YXR1cy1jb2wiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9Intyb3d9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtdGFnIDp0eXBlPSJyb3cuc3RhdHVzIHwgc3RhdHVzRmlsdGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgcm93LnN0YXR1cyB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFnPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxlbC10YWJsZS1jb2x1bW4gbGFiZWw9IuaOkuW6jyIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjgwIiBwcm9wPSJzb3J0IiBzb3J0YWJsZT0iY3VzdG9tIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpjbGFzcy1uYW1lPSJnZXRTb3J0Q2xhc3MoJ3NvcnQnKSIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9Intyb3d9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyByb3cuc29ydCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tPGVsLWlucHV0IHYtbW9kZWw9ImZvcm0uc29ydCIgQGNoYW5nZT0iaGFuZGxlQ3VycmVudENoYW5nZShyb3cpIiAvPi0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gIOWtl+autee7k+adnyAgIC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tICDmk43kvZzlvIDlp4sgICAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGVsLXRhYmxlLWNvbHVtbiBsYWJlbD0i5pON5L2cIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iMjQwcHgiIGNsYXNzLW5hbWU9InNtYWxsLXBhZGRpbmcgZml4ZWQtd2lkdGgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9Intyb3csJGluZGV4fSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB0eXBlPSJwcmltYXJ5IiBzaXplPSJtaW5pIiBAY2xpY2s9ImhhbmRsZVVwZGF0ZShyb3cpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg57yW6L6RCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LWlmPSJyb3cuc3RhdHVzIT09J2VuYWJsZSciIHNpemU9Im1pbmkiIHR5cGU9InN1Y2Nlc3MiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImhhbmRsZU1vZGlmeVN0YXR1cyhyb3csJ2VuYWJsZScpIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5byA5ZCvCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LWlmPSJyb3cuc3RhdHVzIT09J2Rpc2FibGUnIiBzaXplPSJtaW5pIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJoYW5kbGVNb2RpZnlTdGF0dXMocm93LCdkaXNhYmxlJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDnpoHnlKgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIHYtaWY9InJvdy5zdGF0dXMhPT0nZW5hYmxlJyIgc2l6ZT0ibWluaSIgdHlwZT0iZGFuZ2VyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJoYW5kbGVEZWxldGUocm93LCRpbmRleCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDliKDpmaQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tICDmk43kvZznu5PmnZ8gICAtLT4KICAgICAgICAgICAgICAgICAgICA8L2VsLXRhYmxlPgogICAgICAgICAgICAgICAgICAgIDwhLS0gIOihqOagvOe7k+adnyAgLS0+CgogICAgICAgICAgICAgICAgICAgIDwhLS0gIOWIhumhteW8gOWniyAgLS0+CiAgICAgICAgICAgICAgICAgICAgPHBhZ2luYXRpb24gdi1zaG93PSJ0b3RhbD4wIiA6dG90YWw9InRvdGFsIiA6cGFnZS5zeW5jPSJsaXN0UXVlcnkucGFnZSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6bGltaXQuc3luYz0ibGlzdFF1ZXJ5LmxpbWl0IiBAcGFnaW5hdGlvbj0iZ2V0TGlzdCIKICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgIDwhLS0gIOWIhumhtee7k+adnyAgLS0+CiAgICAgICAgICAgICAgICA8L2VsLWNhcmQ+CiAgICAgICAgICAgIDwvZWwtY29sPgogICAgICAgIDwvZWwtcm93PgogICAgICAgIDwhLS0gZm9ybSDooajljZUgLS0+CiAgICAgICAgPGVsLWRpYWxvZyA6dGl0bGU9InRleHRNYXBbZGlhbG9nU3RhdHVzXSIgOnZpc2libGUuc3luYz0iZGlhbG9nRm9ybVZpc2libGUiPgogICAgICAgICAgICA8ZWwtZm9ybSByZWY9ImRhdGFGb3JtIiA6cnVsZXM9InJ1bGVzIiA6bW9kZWw9ImZvcm0iIGxhYmVsLXBvc2l0aW9uPSJyaWdodCIgbGFiZWwtd2lkdGg9IjcwcHgiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogNDAwcHg7IG1hcmdpbi1sZWZ0OjUwcHg7IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLkuIrnuqciIHByb3A9InBpZCI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWNhc2NhZGVyCiAgICAgICAgICAgICAgICAgICAgICAgIDpvcHRpb25zPSJ0cmVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iZm9ybS5waWQiCiAgICAgICAgICAgICAgICAgICAgICAgIDpwcm9wcz0iewogICAgICAgICAgICAgIGNoZWNrU3RyaWN0bHk6IHRydWUsCiAgICAgICAgICAgICAgZW1pdFBhdGg6IGZhbHNlLAogICAgICAgICAgICAgIGxhYmVsOiAndGV4dCcsCiAgICAgICAgICAgICAgdmFsdWU6ICdpZCcsCiAgICAgICAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicKICAgICAgICAgICAgfSIKICAgICAgICAgICAgICAgICAgICAgICAgOnNob3ctYWxsLWxldmVscz0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSLniLbnuqfoj5zljZUiCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxhcHNlLXRhZ3MKICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICAgICAgICAgIEBjaGFuZ2U9ImNoYW5nZVBhcmVudCIKICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJhYmxlCiAgICAgICAgICAgICAgICAgICAgPjwvZWwtY2FzY2FkZXI+CiAgICAgICAgICAgICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gbGFiZWw9IuWQjeensCIgcHJvcD0ibWVudV9uYW1lIj4KICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0iZm9ybS5tZW51X25hbWUiLz4KICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i5Zu+5qCHIiBwcm9wPSJpY29ucyI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImZvcm0uaWNvbnMiLz4KICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i5Zyw5Z2AIiBwcm9wPSJ1cmwiPgogICAgICAgICAgICAgICAgICAgIDxlbC1pbnB1dCB2LW1vZGVsPSJmb3JtLnVybCIvPgogICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLnirbmgIEiIHByb3A9InN0YXR1cyI+CiAgICAgICAgICAgICAgICAgICAgPGVsLXNlbGVjdCB2LW1vZGVsPSJmb3JtLnN0YXR1cyIgY2xhc3M9ImZpbHRlci1pdGVtIiBwbGFjZWhvbGRlcj0iUGxlYXNlIHNlbGVjdCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxlbC1vcHRpb24gdi1mb3I9Iml0ZW0gaW4gc3RhdHVzT3B0aW9ucyIgOmtleT0iaXRlbSIgOmxhYmVsPSJpdGVtIiA6dmFsdWU9Iml0ZW0iLz4KICAgICAgICAgICAgICAgICAgICA8L2VsLXNlbGVjdD4KICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i5o6S5bqPIiBwcm9wPSJzb3J0Ij4KICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0iZm9ybS5zb3J0Ii8+CiAgICAgICAgICAgICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgICAgICAgPC9lbC1mb3JtPgogICAgICAgICAgICA8ZGl2IHNsb3Q9ImZvb3RlciIgY2xhc3M9ImRpYWxvZy1mb290ZXIiPgogICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2s9ImRpYWxvZ0Zvcm1WaXNpYmxlID0gZmFsc2UiPgogICAgICAgICAgICAgICAgICAgIOWPlua2iAogICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIHR5cGU9InByaW1hcnkiIDpkaXNhYmxlZD0iYnV0dG9uU3RhdHVzIiBAY2xpY2s9ImRpYWxvZ1N0YXR1cz09PSdjcmVhdGUnP2NyZWF0ZURhdGEoKTp1cGRhdGVEYXRhKCkiPgogICAgICAgICAgICAgICAgICAgIOehruiupAogICAgICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZWwtZGlhbG9nPgogICAgICAgIDwhLS0gZm9ybSDooajljZUgLS0+CiAgICA8L2Rpdj4K"},null]}