{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\table.vue?vue&type=style&index=0&id=24b9da08&scoped=true&lang=css&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\table.vue","mtime":1646222545923},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\css-loader\\dist\\cjs.js","mtime":1645316877405},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1645316879909},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\postcss-loader\\src\\index.js","mtime":1645316878550},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC10YWJsZV9fYm9keSAuY2VsbCB7CiAgICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7Cn0K"},{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmHA;AACA;AACA","file":"table.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.Name\" placeholder=\"表名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"0\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column label=\"表名\" prop=\"Name\"  align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"存储引擎\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Engine }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"行格式\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Row_format }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"表中的行数\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Rows }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"整个表的数据量\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Data_length }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"下一个自增的值\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Auto_increment }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"注释\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Comment }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"字符集\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Collation }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"创建时间\" align=\"center\" sortable=\"custom\" prop=\"Create_time\" :class-name=\"getSortClass('Create_time')\">\n                            <template slot-scope=\"{row}\">\n                                <span style=\"font-size: 8px\">{{ row.Create_time }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"修改时间\" align=\"center\" sortable=\"custom\" prop=\"Update_time\" :class-name=\"getSortClass('Update_time')\">\n                            <template slot-scope=\"{row}\">\n                                <span style=\"font-size: 8px\">{{ row.Update_time }}</span>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"150px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button round type=\"primary\" size=\"mini\" @click=\"handleUpdate(row)\">\n                                    优化\n                                </el-button>\n                                <el-button round size=\"mini\" type=\"danger\" @click=\"handleDelete(row,$index)\">\n                                    修复\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n<style scoped>\n.el-table__body .cell {\n    white-space: pre-line;\n}\n</style>\n<script>\nimport { fetchList } from '@/api/table'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination' // secondary package based on el-pagination\n\nexport default {\n    name: 'Table',\n    components: { Pagination },\n    directives: { waves },\n    data() {\n        return {\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-Create_time'\n            },\n            // 分页数据\n            list: null,\n            // 分页数据加载状态\n            listLoading: true\n        }\n    },\n    watch: {},\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            // 权限列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-Create_time'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        }\n    }\n}\n</script>\n"]}]}