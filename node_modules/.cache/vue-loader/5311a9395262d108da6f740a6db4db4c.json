{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\system\\table.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\system\\table.vue","mtime":1646556201873},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1645316878558},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZldGNoTGlzdCxvcHRpbWl6ZVRhYmxlLHJlcGFpclRhYmxlIH0gZnJvbSAnQC9hcGkvdGFibGUnCmltcG9ydCB3YXZlcyBmcm9tICdAL2RpcmVjdGl2ZS93YXZlcycgLy8gd2F2ZXMgZGlyZWN0aXZlCmltcG9ydCBQYWdpbmF0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9QYWdpbmF0aW9uJwppbXBvcnQgeyBkZWxldGVBZG1pbiB9IGZyb20gJ0AvYXBpL2FkbWluJyAvLyBzZWNvbmRhcnkgcGFja2FnZSBiYXNlZCBvbiBlbC1wYWdpbmF0aW9uCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnVGFibGUnLAogICAgY29tcG9uZW50czogeyBQYWdpbmF0aW9uIH0sCiAgICBkaXJlY3RpdmVzOiB7IHdhdmVzIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRvdGFsOiAwLAogICAgICAgICAgICAvLyDmn6Xor6IKICAgICAgICAgICAgbGlzdFF1ZXJ5OiB7CiAgICAgICAgICAgICAgICBwYWdlOiAxLAogICAgICAgICAgICAgICAgbGltaXQ6IDEwLAogICAgICAgICAgICAgICAgc29ydDogJy1DcmVhdGVfdGltZScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy8g5YiG6aG15pWw5o2uCiAgICAgICAgICAgIGxpc3Q6IG51bGwsCiAgICAgICAgICAgIC8vIOWIhumhteaVsOaNruWKoOi9veeKtuaAgQogICAgICAgICAgICBsaXN0TG9hZGluZzogdHJ1ZQogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDoge30sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGdldExpc3QoKSB7CiAgICAgICAgICAgIC8vIOadg+mZkOWIl+ihqAogICAgICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQogICAgICAgICAgICBmZXRjaExpc3QodGhpcy5saXN0UXVlcnkpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtcwogICAgICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEudG90YWwKICAgICAgICAgICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICB9LGVycm9yID0+IHsKICAgICAgICAgICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgcmVzZXRGaWx0ZXIoKSB7CiAgICAgICAgICAgIC8vIOmHjee9ruafpeivogogICAgICAgICAgICB0aGlzLmxpc3RRdWVyeSA9IHsKICAgICAgICAgICAgICAgIHBhZ2U6IDEsCiAgICAgICAgICAgICAgICBsaW1pdDogMTAsCiAgICAgICAgICAgICAgICBzb3J0OiAnLUNyZWF0ZV90aW1lJwogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuZ2V0TGlzdCgpCiAgICAgICAgfSwKICAgICAgICBoYW5kbGVGaWx0ZXIoKSB7CiAgICAgICAgICAgIC8vIOeCueWHu+afpeivogogICAgICAgICAgICB0aGlzLmxpc3RRdWVyeS5wYWdlID0gMQogICAgICAgICAgICB0aGlzLmdldExpc3QoKQogICAgICAgIH0sCiAgICAgICAgc29ydENoYW5nZShkYXRhKSB7CiAgICAgICAgICAgIC8vIOiuvue9ruaOkuW6jwogICAgICAgICAgICBjb25zdCB7IHByb3AsIG9yZGVyIH0gPSBkYXRhCiAgICAgICAgICAgIHRoaXMuc29ydEJ5Q29sdW1uKG9yZGVyLCBwcm9wKQogICAgICAgIH0sCiAgICAgICAgc29ydEJ5Q29sdW1uKG9yZGVyLCBwcm9wKSB7CiAgICAgICAgICAgIGlmIChvcmRlciA9PT0gJ2FzY2VuZGluZycpIHsKICAgICAgICAgICAgICAgIHRoaXMubGlzdFF1ZXJ5LnNvcnQgPSAnKycgKyBwcm9wCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0aGlzLmxpc3RRdWVyeS5zb3J0ID0gJy0nICsgcHJvcAogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuaGFuZGxlRmlsdGVyKCkKICAgICAgICB9LAogICAgICAgIGdldFNvcnRDbGFzczogZnVuY3Rpb24oa2V5KSB7CiAgICAgICAgICAgIC8vIOaOkuW6jwogICAgICAgICAgICBjb25zdCBzb3J0ID0gdGhpcy5saXN0UXVlcnkuc29ydAogICAgICAgICAgICByZXR1cm4gc29ydCA9PT0gYCske2tleX1gID8gJ2FzY2VuZGluZycgOiAnZGVzY2VuZGluZycKICAgICAgICB9LAogICAgICAgIGhhbmRsZU9wdGltaXplIChyb3cpIHsKICAgICAgICAgICAgLy8g5LyY5YyWCiAgICAgICAgICAgIHRoaXMuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuS8mOWMlicrcm93Lk5hbWUrJ+ihqCwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogJ+ehruWumicsCiAgICAgICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9KS50aGVuKCgpID0+IHsKICAgICAgICAgICAgICAgIG9wdGltaXplVGFibGUoeyBuYW1lOnJvdy5OYW1lIH0pLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuJG5vdGlmeSh7CiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnU3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdEZWxldGUgU3VjY2Vzc2Z1bGx5JywKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgICAgICAgICBkdXJhdGlvbjogMjAwMAogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRMaXN0KCkKICAgICAgICAgICAgICAgIH0sZXJyb3IgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfkvJjljJblpLHotKUnKQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGhhbmRsZVJlcGFpciAocm93KSB7CiAgICAgICAgICAgIC8vIOS/ruWkjQogICAgICAgICAgICB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbkv67lpI0nK3Jvdy5OYW1lKyfooagsIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgICAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogJ+WPlua2iCcsCiAgICAgICAgICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICByZXBhaXJUYWJsZSh7IG5hbWU6cm93Lk5hbWUgfSkudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbm90aWZ5KHsKICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICdTdWNjZXNzJywKICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZTogJ0RlbGV0ZSBTdWNjZXNzZnVsbHknLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAyMDAwCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB0aGlzLmdldExpc3QoKQogICAgICAgICAgICAgICAgfSxlcnJvciA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+S/ruWkjeWksei0pScpCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICB9Cn0K"},{"version":3,"sources":["table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"table.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n    <div class=\"app-container\">\n        <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n                <el-card class=\"box-card\">\n                    <!--  搜索开始  -->\n                    <div class=\"filter-container\" style=\"margin-bottom: 15px;\">\n                        <el-input v-model=\"listQuery.Name\" placeholder=\"表名称\" style=\"width: 200px;\"\n                                  class=\"filter-item\" @keyup.enter.native=\"handleFilter\"\n                        />\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-search\" @click=\"handleFilter\"\n                        >\n                            搜索\n                        </el-button>\n                        <el-button v-waves class=\"filter-item\" style=\"margin-left: 10px;\" type=\"primary\"\n                                   icon=\"el-icon-refresh\" @click=\"resetFilter\"\n                        >\n                            清除\n                        </el-button>\n                    </div>\n                    <!--  搜索结束  -->\n\n                    <!--  表格开始  -->\n                    <el-table\n                        :key=\"0\"\n                        v-loading=\"listLoading\"\n                        element-loading-text=\"拼命加载中\"\n                        element-loading-spinner=\"el-icon-loading\"\n                        element-loading-background=\"rgba(245, 247, 250, 1)\"\n                        :data=\"list\"\n                        border\n                        fit\n                        highlight-current-row\n                        style=\"width: 100%;\"\n                        max-height=\"750\"\n                        @sort-change=\"sortChange\"\n                    >\n                        <!--  字段开始    -->\n                        <el-table-column\n                            type=\"selection\"\n                            width=\"55\">\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"表名\" prop=\"Name\"  align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Name }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"存储引擎\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Engine }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"行格式\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Row_format }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"表中的行数\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Rows }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"整个表的数据量\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Data_length }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"下一个自增的值\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Auto_increment }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"注释\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Comment }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column label=\"字符集\" align=\"center\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Collation }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"创建时间\" align=\"center\" sortable=\"custom\" prop=\"Create_time\" :class-name=\"getSortClass('Create_time')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Create_time }}</span>\n                            </template>\n                        </el-table-column>\n                        <el-table-column show-overflow-tooltip label=\"修改时间\" align=\"center\" sortable=\"custom\" prop=\"Update_time\" :class-name=\"getSortClass('Update_time')\">\n                            <template slot-scope=\"{row}\">\n                                <span>{{ row.Update_time }}</span>\n                            </template>\n                        </el-table-column>\n                        <!--  字段结束   -->\n                        <!--  操作开始   -->\n                        <el-table-column label=\"操作\" align=\"center\" width=\"150px\" class-name=\"small-padding fixed-width\">\n                            <template slot-scope=\"{row,$index}\">\n                                <el-button round type=\"primary\" size=\"mini\" @click=\"handleOptimize(row)\">\n                                    优化\n                                </el-button>\n                                <el-button round size=\"mini\" type=\"danger\" @click=\"handleRepair(row,$index)\">\n                                    修复\n                                </el-button>\n                            </template>\n                        </el-table-column>\n                        <!--  操作结束   -->\n                    </el-table>\n                    <!--  表格结束  -->\n\n                    <!--  分页开始  -->\n                    <pagination v-show=\"total>0\" :total=\"total\" :page.sync=\"listQuery.page\"\n                                :limit.sync=\"listQuery.limit\" @pagination=\"getList\"\n                    />\n                    <!--  分页结束  -->\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport { fetchList,optimizeTable,repairTable } from '@/api/table'\nimport waves from '@/directive/waves' // waves directive\nimport Pagination from '@/components/Pagination'\nimport { deleteAdmin } from '@/api/admin' // secondary package based on el-pagination\n\nexport default {\n    name: 'Table',\n    components: { Pagination },\n    directives: { waves },\n    data() {\n        return {\n            total: 0,\n            // 查询\n            listQuery: {\n                page: 1,\n                limit: 10,\n                sort: '-Create_time'\n            },\n            // 分页数据\n            list: null,\n            // 分页数据加载状态\n            listLoading: true\n        }\n    },\n    watch: {},\n    created() {\n        this.getList()\n    },\n    methods: {\n        getList() {\n            // 权限列表\n            this.listLoading = true\n            fetchList(this.listQuery).then(response => {\n                this.list = response.data.items\n                this.total = response.data.total\n                this.listLoading = false\n            },error => {\n                this.listLoading = false\n            })\n        },\n        resetFilter() {\n            // 重置查询\n            this.listQuery = {\n                page: 1,\n                limit: 10,\n                sort: '-Create_time'\n            }\n            this.getList()\n        },\n        handleFilter() {\n            // 点击查询\n            this.listQuery.page = 1\n            this.getList()\n        },\n        sortChange(data) {\n            // 设置排序\n            const { prop, order } = data\n            this.sortByColumn(order, prop)\n        },\n        sortByColumn(order, prop) {\n            if (order === 'ascending') {\n                this.listQuery.sort = '+' + prop\n            } else {\n                this.listQuery.sort = '-' + prop\n            }\n            this.handleFilter()\n        },\n        getSortClass: function(key) {\n            // 排序\n            const sort = this.listQuery.sort\n            return sort === `+${key}` ? 'ascending' : 'descending'\n        },\n        handleOptimize (row) {\n            // 优化\n            this.$confirm('此操作将优化'+row.Name+'表, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                optimizeTable({ name:row.Name }).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                },error => {\n                    console.log('优化失败')\n                })\n            })\n        },\n        handleRepair (row) {\n            // 修复\n            this.$confirm('此操作将修复'+row.Name+'表, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n            }).then(() => {\n                repairTable({ name:row.Name }).then((res) => {\n                    this.$notify({\n                        title: 'Success',\n                        message: 'Delete Successfully',\n                        type: 'success',\n                        duration: 2000\n                    })\n                    this.getList()\n                },error => {\n                    console.log('修复失败')\n                })\n            })\n        },\n    }\n}\n</script>\n"]}]}