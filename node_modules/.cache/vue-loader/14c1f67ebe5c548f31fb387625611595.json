{"remainingRequest":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\wwwroot\\vue-admin-template\\src\\views\\admin\\index.vue?vue&type=template&id=2ba5fe30&","dependencies":[{"path":"D:\\wwwroot\\vue-admin-template\\src\\views\\admin\\index.vue","mtime":1645712667888},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1645316880001},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645316876002},{"path":"D:\\wwwroot\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1645316879025}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}